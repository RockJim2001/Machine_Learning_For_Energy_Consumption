'''Benchmark LFs'''

class MK():
    def __init__(self):
        # 初始技能水平
        self.efficency = None
        # 学习系数
        self.learning_rate = None
        # 遗忘系数
        self.forgetting_rate = None
        # 工件相似度
        self.delta = None
        # 学习效应极限
        self.theta = 0.75
        # 不可压缩因子
        self.M = 0.8

    def name(self):
        '''返回问题的名字'''
        pass

    def shape(self):
        '''返回问题规模'''
        return f"{self.name()}问题的规模为:{len(self.delta)}*{len(self.efficency)}"

class LF8_8(MK):
    '''8工件*8设备'''
    def __init__(self):
        super().__init__()
        self.efficency = [[0.89, 0.87, 0.89, 1.15, 0.86, 1.13, 0.98, 0.95],
                          [0.87, 0.9, 0.92, 1.1, 1.03, 0.92, 1.06, 0.89],
                          [0.89, 0.92, 1.1, 0.9, 0.98, 0.97, 0.92, 0.95],
                          [1.15, 1.1, 0.9, 0.97, 0.98, 1.0, 0.88, 1.06],
                          [0.86, 1.03, 0.98, 0.98, 0.93, 0.89, 1.13, 1.03],
                          [1.13, 0.92, 0.97, 1.0, 0.89, 1.13, 0.96, 0.92],
                          [0.98, 1.06, 0.92, 0.88, 1.13, 0.96, 1.01, 0.94],
                          [0.95, 0.89, 0.95, 1.06, 1.03, 0.92, 0.94, 0.92]]
        self.learning_rate = [[-0.16, -0.24, -0.17, -0.27, -0.22, -0.25, -0.23, -0.21],
                              [-0.24, -0.29, -0.24, -0.25, -0.26, -0.17, -0.23, -0.28],
                              [-0.17, -0.24, -0.28, -0.21, -0.16, -0.23, -0.17, -0.24],
                              [-0.27, -0.25, -0.21, -0.27, -0.24, -0.18, -0.21, -0.16],
                              [-0.22, -0.26, -0.16, -0.24, -0.19, -0.28, -0.18, -0.24],
                              [-0.25, -0.17, -0.23, -0.18, -0.28, -0.23, -0.26, -0.22],
                              [-0.23, -0.23, -0.17, -0.21, -0.18, -0.26, -0.17, -0.27],
                              [-0.21, -0.28, -0.24, -0.16, -0.24, -0.22, -0.27, -0.28]]
        self.forgetting_rate = [[0.2, 0.17, 0.17, 0.2, 0.15, 0.16, 0.18, 0.17],
                                [0.17, 0.19, 0.17, 0.21, 0.22, 0.24, 0.21, 0.21],
                                [0.17, 0.17, 0.19, 0.19, 0.19, 0.21, 0.25, 0.16],
                                [0.2, 0.21, 0.19, 0.17, 0.23, 0.18, 0.21, 0.23],
                                [0.15, 0.22, 0.19, 0.23, 0.21, 0.18, 0.2, 0.23],
                                [0.16, 0.24, 0.21, 0.18, 0.18, 0.23, 0.21, 0.22],
                                [0.18, 0.21, 0.25, 0.21, 0.2, 0.21, 0.23, 0.21],
                                [0.17, 0.21, 0.16, 0.23, 0.23, 0.22, 0.21, 0.16]]
        self.delta = [[1.0, 0.7, 0.4, 0.5, 0.7, 0.4, 0.9, 0.8],
                      [0.7, 1.0, 0.4, 0.9, 0.6, 0.8, 0.6, 0.9],
                      [0.4, 0.4, 1.0, 0.8, 0.7, 0.6, 0.4, 1.0],
                      [0.5, 0.9, 0.8, 1.0, 0.6, 0.8, 0.7, 0.6],
                      [0.7, 0.6, 0.7, 0.6, 1.0, 0.7, 0.9, 0.4],
                      [0.4, 0.8, 0.6, 0.8, 0.7, 1.0, 0.9, 0.9],
                      [0.9, 0.6, 0.4, 0.7, 0.9, 0.9, 1.0, 1.0],
                      [0.8, 0.9, 1.0, 0.6, 0.4, 0.9, 1.0, 1.0]]

    def name(self):
        return "LF01"


class LF10_10(MK):
    '''10工件*10设备'''
    def __init__(self):
        super().__init__()
        self.efficency = [[1.13, 0.9, 0.88, 1.02, 0.95, 1.1, 1.03, 0.99, 1.07, 0.87],
                          [0.9, 0.92, 0.86, 0.97, 1.05, 1.14, 1.04, 1.03, 1.11, 0.95],
                          [0.88, 0.86, 0.97, 1.11, 1.1, 0.89, 0.85, 1.07, 0.89, 1.1],
                          [1.02, 0.97, 1.11, 0.94, 0.88, 0.96, 1.1, 0.98, 0.92, 1.1],
                          [0.95, 1.05, 1.1, 0.88, 0.96, 0.9, 0.86, 0.91, 0.89, 1.09],
                          [1.1, 1.14, 0.89, 0.96, 0.9, 0.85, 1.0, 0.91, 1.04, 1.08],
                          [1.03, 1.04, 0.85, 1.1, 0.86, 1.0, 1.11, 1.07, 1.05, 1.08],
                          [0.99, 1.03, 1.07, 0.98, 0.91, 0.91, 1.07, 1.13, 1.12, 0.88],
                          [1.07, 1.11, 0.89, 0.92, 0.89, 1.04, 1.05, 1.12, 0.95, 1.11],
                          [0.87, 0.95, 1.1, 1.1, 1.09, 1.08, 1.08, 0.88, 1.11, 1.07]]
        self.learning_rate =[[-0.16, -0.23, -0.16, -0.23, -0.18, -0.26, -0.3, -0.23, -0.28, -0.19],
                             [-0.23, -0.24, -0.22, -0.29, -0.18, -0.17, -0.17, -0.16, -0.22, -0.19],
                             [-0.16, -0.22, -0.29, -0.17, -0.18, -0.3, -0.29, -0.21, -0.16, -0.24],
                             [-0.23, -0.29, -0.17, -0.29, -0.28, -0.19, -0.21, -0.29, -0.2, -0.28],
                             [-0.18, -0.18, -0.18, -0.28, -0.24, -0.2, -0.26, -0.27, -0.23, -0.24],
                             [-0.26, -0.17, -0.3, -0.19, -0.2, -0.16, -0.28, -0.27, -0.24, -0.16],
                             [-0.3, -0.17, -0.29, -0.21, -0.26, -0.28, -0.28, -0.17, -0.25, -0.21],
                             [-0.23, -0.16, -0.21, -0.29, -0.27, -0.27, -0.17, -0.15, -0.23, -0.27],
                             [-0.28, -0.22, -0.16, -0.2, -0.23, -0.24, -0.25, -0.23, -0.23, -0.22],
                             [-0.19, -0.19, -0.24, -0.28, -0.24, -0.16, -0.21, -0.27, -0.22, -0.27]]
        self.forgetting_rate = [[0.15, 0.17, 0.2, 0.2, 0.15, 0.19, 0.23, 0.21, 0.17, 0.18],
                                [0.17, 0.2, 0.23, 0.22, 0.2, 0.17, 0.16, 0.17, 0.21, 0.21],
                                [0.2, 0.23, 0.18, 0.2, 0.2, 0.23, 0.24, 0.21, 0.16, 0.24],
                                [0.2, 0.22, 0.2, 0.25, 0.2, 0.22, 0.23, 0.18, 0.24, 0.23],
                                [0.15, 0.2, 0.2, 0.2, 0.22, 0.15, 0.22, 0.15, 0.18, 0.24],
                                [0.19, 0.17, 0.23, 0.22, 0.15, 0.2, 0.18, 0.19, 0.23, 0.21],
                                [0.23, 0.16, 0.24, 0.23, 0.22, 0.18, 0.19, 0.17, 0.22, 0.2],
                                [0.21, 0.17, 0.21, 0.18, 0.15, 0.19, 0.17, 0.17, 0.17, 0.24],
                                [0.17, 0.21, 0.16, 0.24, 0.18, 0.23, 0.22, 0.17, 0.17, 0.22],
                                [0.18, 0.21, 0.24, 0.23, 0.24, 0.21, 0.2, 0.24, 0.22, 0.2]]
        self.delta = [[1.0, 0.6, 0.4, 0.6, 0.8, 0.4, 0.6, 0.8, 0.8, 0.8],
                      [0.6, 1.0, 1.0, 0.8, 0.8, 0.7, 0.7, 0.7, 0.8, 0.9],
                      [0.4, 1.0, 1.0, 0.5, 0.9, 0.8, 0.8, 0.4, 0.8, 0.9],
                      [0.6, 0.8, 0.5, 1.0, 0.8, 0.6, 0.7, 0.9, 0.9, 0.7],
                      [0.8, 0.8, 0.9, 0.8, 1.0, 0.9, 0.9, 0.8, 0.8, 0.7],
                      [0.4, 0.7, 0.8, 0.6, 0.9, 1.0, 0.9, 0.4, 0.9, 0.7],
                      [0.6, 0.7, 0.8, 0.7, 0.9, 0.9, 1.0, 0.8, 0.7, 0.6],
                      [0.8, 0.7, 0.4, 0.9, 0.8, 0.4, 0.8, 1.0, 0.7, 0.8],
                      [0.8, 0.8, 0.8, 0.9, 0.8, 0.9, 0.7, 0.7, 1.0, 0.7],
                      [0.8, 0.9, 0.9, 0.7, 0.7, 0.7, 0.6, 0.8, 0.7, 1.0]]

    def name(self):
        return "LF02"


class LF01(MK):
    '''MK01 10工件*6设备'''
    def __init__(self):
        super().__init__()
        self.efficency = [[1.1, 1.03, 1.0, 0.92, 1.1, 1.06],
                          [1.03, 1.14, 0.9, 1.14, 1.03, 0.92],
                          [1.0, 0.9, 1.01, 1.09, 0.95, 1.03],
                          [0.92, 1.14, 1.09, 0.88, 1.08, 1.11],
                          [1.1, 1.03, 0.95, 1.08, 0.9, 1.07],
                          [1.06, 0.92, 1.03, 1.11, 1.07, 1.04]]
        self.learning_rate = [[-0.17, -0.22, -0.2, -0.29, -0.25, -0.23],
                              [-0.22, -0.27, -0.28, -0.18, -0.22, -0.27],
                              [-0.2, -0.28, -0.17, -0.2, -0.26, -0.28],
                              [-0.29, -0.18, -0.2, -0.2, -0.3, -0.19],
                              [-0.25, -0.22, -0.26, -0.3, -0.23, -0.25],
                              [-0.23, -0.27, -0.28, -0.19, -0.25, -0.21]]
        self.forgetting_rate = [[0.17, 0.19, 0.21, 0.17, 0.16, 0.22],
                                [0.19, 0.16, 0.23, 0.22, 0.17, 0.21],
                                [0.21, 0.23, 0.23, 0.23, 0.17, 0.15],
                                [0.17, 0.22, 0.23, 0.21, 0.24, 0.16],
                                [0.16, 0.17, 0.17, 0.24, 0.22, 0.24],
                                [0.22, 0.21, 0.15, 0.16, 0.24, 0.18]]
        self.delta = [[1.0, 0.8, 0.6, 0.8, 1.0, 1.0, 0.7, 0.5, 0.7, 0.4],
                      [0.8, 1.0, 0.8, 0.6, 0.9, 0.4, 0.8, 0.7, 0.6, 0.6],
                      [0.6, 0.8, 1.0, 0.8, 0.8, 0.5, 0.7, 0.4, 0.6, 1.0],
                      [0.8, 0.6, 0.8, 1.0, 1.0, 0.9, 0.7, 1.0, 0.8, 0.6],
                      [1.0, 0.9, 0.8, 1.0, 1.0, 0.7, 0.8, 0.7, 0.8, 0.8],
                      [1.0, 0.4, 0.5, 0.9, 0.7, 1.0, 0.9, 1.0, 0.4, 0.8],
                      [0.7, 0.8, 0.7, 0.7, 0.8, 0.9, 1.0, 0.7, 0.8, 0.6],
                      [0.5, 0.7, 0.4, 1.0, 0.7, 1.0, 0.7, 1.0, 1.0, 0.5],
                      [0.7, 0.6, 0.6, 0.8, 0.8, 0.4, 0.8, 1.0, 1.0, 1.0],
                      [0.4, 0.6, 1.0, 0.6, 0.8, 0.8, 0.6, 0.5, 1.0, 1.0]]

    def name(self):
        return "LF01"


class LF02(MK):
    '''MK02 10工件*6设备'''
    def __init__(self):
        super().__init__()
        self.efficency = [[1.11, 1.01, 1.09, 0.92, 1.11, 0.97],
                          [1.01, 1.01, 1.03, 0.99, 1.05, 1.05],
                          [1.09, 1.03, 1.09, 1.09, 0.9, 0.89],
                          [0.92, 0.99, 1.09, 0.93, 0.86, 1.07],
                          [1.11, 1.05, 0.9, 0.86, 1.02, 1.11],
                          [0.97, 1.05, 0.89, 1.07, 1.11, 1.0]]
        self.learning_rate = [[-0.22, -0.26, -0.2, -0.29, -0.23, -0.27],
                              [-0.26, -0.23, -0.27, -0.23, -0.28, -0.17],
                              [-0.2, -0.27, -0.28, -0.23, -0.24, -0.24],
                              [-0.29, -0.23, -0.23, -0.25, -0.28, -0.22],
                              [-0.23, -0.28, -0.24, -0.28, -0.19, -0.25],
                              [-0.27, -0.17, -0.24, -0.22, -0.25, -0.18]]
        self.forgetting_rate = [[0.17, 0.15, 0.18, 0.22, 0.2, 0.25],
                                [0.15, 0.24, 0.15, 0.15, 0.22, 0.18],
                                [0.18, 0.15, 0.19, 0.2, 0.17, 0.24],
                                [0.22, 0.15, 0.2, 0.2, 0.2, 0.19],
                                [0.2, 0.22, 0.17, 0.2, 0.15, 0.22],
                                [0.25, 0.18, 0.24, 0.19, 0.22, 0.25]]
        self.delta = [[1.0, 0.9, 1.0, 0.6, 0.8, 0.6, 0.9, 0.5, 0.6, 0.5],
                      [0.9, 1.0, 0.8, 0.6, 0.8, 0.7, 1.0, 0.6, 0.8, 1.0],
                      [1.0, 0.8, 1.0, 0.5, 0.9, 0.5, 0.8, 1.0, 0.9, 0.9],
                      [0.6, 0.6, 0.5, 1.0, 1.0, 0.9, 0.6, 0.9, 0.4, 0.4],
                      [0.8, 0.8, 0.9, 1.0, 1.0, 0.5, 1.0, 0.5, 0.5, 0.9],
                      [0.6, 0.7, 0.5, 0.9, 0.5, 1.0, 0.9, 0.8, 0.9, 0.7],
                      [0.9, 1.0, 0.8, 0.6, 1.0, 0.9, 1.0, 0.6, 0.6, 0.8],
                      [0.5, 0.6, 1.0, 0.9, 0.5, 0.8, 0.6, 1.0, 1.0, 0.9],
                      [0.6, 0.8, 0.9, 0.4, 0.5, 0.9, 0.6, 1.0, 1.0, 0.6],
                      [0.5, 1.0, 0.9, 0.4, 0.9, 0.7, 0.8, 0.9, 0.6, 1.0]]

    def name(self):
        return "LF02"


class LF03(MK):
    '''MK03 15工件*8设备'''
    def __init__(self):
        super().__init__()
        self.efficency = [[0.87, 1.1, 0.94, 0.85, 0.94, 1.11, 0.86, 1.07],
                          [1.1, 0.9, 1.06, 0.93, 1.05, 0.94, 1.08, 0.89],
                          [0.94, 1.06, 1.13, 0.89, 1.15, 0.99, 1.08, 0.89],
                          [0.85, 0.93, 0.89, 1.06, 0.99, 0.85, 1.04, 1.07],
                          [0.94, 1.05, 1.15, 0.99, 0.96, 1.02, 0.92, 1.08],
                          [1.11, 0.94, 0.99, 0.85, 1.02, 0.89, 0.93, 1.05],
                          [0.86, 1.08, 1.08, 1.04, 0.92, 0.93, 0.93, 0.96],
                          [1.07, 0.89, 0.89, 1.07, 1.08, 1.05, 0.96, 0.87]]
        self.learning_rate = [[-0.19, -0.22, -0.18, -0.29, -0.22, -0.26, -0.19, -0.28],
                              [-0.22, -0.27, -0.23, -0.18, -0.22, -0.3, -0.18, -0.26],
                              [-0.18, -0.23, -0.17, -0.27, -0.25, -0.22, -0.18, -0.16],
                              [-0.29, -0.18, -0.27, -0.25, -0.22, -0.23, -0.18, -0.24],
                              [-0.22, -0.22, -0.25, -0.22, -0.2, -0.3, -0.22, -0.17],
                              [-0.26, -0.3, -0.22, -0.23, -0.3, -0.26, -0.19, -0.18],
                              [-0.19, -0.18, -0.18, -0.18, -0.22, -0.19, -0.23, -0.24],
                              [-0.28, -0.26, -0.16, -0.24, -0.17, -0.18, -0.24, -0.19]]
        self.forgetting_rate = [[0.22, 0.16, 0.24, 0.17, 0.17, 0.2, 0.16, 0.16],
                                [0.16, 0.16, 0.21, 0.15, 0.18, 0.19, 0.18, 0.23],
                                [0.24, 0.21, 0.25, 0.18, 0.19, 0.21, 0.22, 0.21],
                                [0.17, 0.15, 0.18, 0.24, 0.21, 0.15, 0.25, 0.16],
                                [0.17, 0.18, 0.19, 0.21, 0.2, 0.22, 0.21, 0.21],
                                [0.2, 0.19, 0.21, 0.15, 0.22, 0.19, 0.19, 0.2],
                                [0.16, 0.18, 0.22, 0.25, 0.21, 0.19, 0.21, 0.23],
                                [0.16, 0.23, 0.21, 0.16, 0.21, 0.2, 0.23, 0.2]]
        self.delta = [[1.0, 0.8, 0.9, 0.5, 0.8, 0.9, 0.8, 0.9, 0.8, 0.8, 0.4, 0.9, 0.7, 0.7, 0.9],
                      [0.8, 1.0, 0.4, 0.6, 0.9, 0.9, 0.8, 0.7, 0.8, 0.9, 0.5, 1.0, 0.4, 0.4, 0.5],
                      [0.9, 0.4, 1.0, 0.7, 0.5, 0.7, 0.5, 0.6, 0.6, 0.5, 0.4, 0.8, 0.8, 0.5, 0.6],
                      [0.5, 0.6, 0.7, 1.0, 0.5, 0.4, 0.4, 0.8, 0.7, 0.7, 0.5, 0.8, 0.4, 0.5, 1.0],
                      [0.8, 0.9, 0.5, 0.5, 1.0, 0.7, 0.7, 0.5, 0.7, 0.9, 0.6, 0.5, 0.8, 0.6, 0.5],
                      [0.9, 0.9, 0.7, 0.4, 0.7, 1.0, 0.8, 0.5, 0.9, 0.4, 0.8, 0.6, 1.0, 0.4, 0.4],
                      [0.8, 0.8, 0.5, 0.4, 0.7, 0.8, 1.0, 0.8, 0.6, 0.7, 0.7, 0.7, 1.0, 0.8, 0.9],
                      [0.9, 0.7, 0.6, 0.8, 0.5, 0.5, 0.8, 1.0, 0.8, 0.6, 0.5, 0.6, 0.9, 0.5, 0.5],
                      [0.8, 0.8, 0.6, 0.7, 0.7, 0.9, 0.6, 0.8, 1.0, 0.6, 0.8, 0.7, 0.5, 0.4, 0.6],
                      [0.8, 0.9, 0.5, 0.7, 0.9, 0.4, 0.7, 0.6, 0.6, 1.0, 0.6, 0.7, 0.9, 0.5, 1.0],
                      [0.4, 0.5, 0.4, 0.5, 0.6, 0.8, 0.7, 0.5, 0.8, 0.6, 1.0, 0.4, 0.5, 0.6, 0.7],
                      [0.9, 1.0, 0.8, 0.8, 0.5, 0.6, 0.7, 0.6, 0.7, 0.7, 0.4, 1.0, 0.7, 0.4, 0.9],
                      [0.7, 0.4, 0.8, 0.4, 0.8, 1.0, 1.0, 0.9, 0.5, 0.9, 0.5, 0.7, 1.0, 0.7, 0.9],
                      [0.7, 0.4, 0.5, 0.5, 0.6, 0.4, 0.8, 0.5, 0.4, 0.5, 0.6, 0.4, 0.7, 1.0, 0.9],
                      [0.9, 0.5, 0.6, 1.0, 0.5, 0.4, 0.9, 0.5, 0.6, 1.0, 0.7, 0.9, 0.9, 0.9, 1.0]]

    def name(self):
        return "LF03"


class LF04(MK):
    '''MK04 15工件*8设备'''
    def __init__(self):
        super().__init__()
        self.efficency = [[0.91, 0.95, 1.01, 0.9, 1.13, 1.0, 0.87, 0.88],
                          [0.95, 1.14, 0.99, 0.95, 1.09, 0.96, 1.07, 1.05],
                          [1.01, 0.99, 1.01, 1.03, 1.05, 0.91, 0.92, 0.86],
                          [0.9, 0.95, 1.03, 1.04, 0.86, 1.1, 0.87, 0.95],
                          [1.13, 1.09, 1.05, 0.86, 1.1, 1.11, 0.93, 1.1],
                          [1.0, 0.96, 0.91, 1.1, 1.11, 0.88, 1.06, 1.02],
                          [0.87, 1.07, 0.92, 0.87, 0.93, 1.06, 0.98, 1.0],
                          [0.88, 1.05, 0.86, 0.95, 1.1, 1.02, 1.0, 0.9]]
        self.learning_rate = [[-0.18, -0.18, -0.21, -0.21, -0.15, -0.18, -0.17, -0.2],
                              [-0.18, -0.3, -0.25, -0.3, -0.18, -0.26, -0.26, -0.27],
                              [-0.21, -0.25, -0.16, -0.21, -0.25, -0.23, -0.26, -0.22],
                              [-0.21, -0.3, -0.21, -0.16, -0.17, -0.2, -0.3, -0.26],
                              [-0.15, -0.18, -0.25, -0.17, -0.17, -0.26, -0.26, -0.21],
                              [-0.18, -0.26, -0.23, -0.2, -0.26, -0.18, -0.23, -0.15],
                              [-0.17, -0.26, -0.26, -0.3, -0.26, -0.23, -0.3, -0.19],
                              [-0.2, -0.27, -0.22, -0.26, -0.21, -0.15, -0.19, -0.16]]
        self.forgetting_rate = [[0.18, 0.15, 0.17, 0.25, 0.21, 0.2, 0.21, 0.25],
                                [0.15, 0.2, 0.22, 0.17, 0.17, 0.19, 0.2, 0.18],
                                [0.17, 0.22, 0.15, 0.19, 0.22, 0.17, 0.24, 0.17],
                                [0.25, 0.17, 0.19, 0.23, 0.21, 0.24, 0.18, 0.15],
                                [0.21, 0.17, 0.22, 0.21, 0.15, 0.2, 0.2, 0.25],
                                [0.2, 0.19, 0.17, 0.24, 0.2, 0.19, 0.19, 0.18],
                                [0.21, 0.2, 0.24, 0.18, 0.2, 0.19, 0.22, 0.22],
                                [0.25, 0.18, 0.17, 0.15, 0.25, 0.18, 0.22, 0.23]]
        self.delta = [[1.0, 0.5, 0.5, 1.0, 0.9, 0.5, 0.8, 0.9, 0.6, 1.0, 0.9, 0.4, 0.9, 0.7, 0.6],
                      [0.5, 1.0, 0.5, 0.6, 0.7, 0.5, 1.0, 0.8, 1.0, 0.4, 0.7, 0.8, 0.7, 1.0, 0.6],
                      [0.5, 0.5, 1.0, 0.7, 1.0, 0.9, 1.0, 0.5, 0.9, 0.7, 0.4, 0.7, 0.8, 0.7, 0.7],
                      [1.0, 0.6, 0.7, 1.0, 0.6, 0.5, 0.6, 0.7, 0.8, 0.7, 0.9, 0.7, 0.9, 0.7, 0.8],
                      [0.9, 0.7, 1.0, 0.6, 1.0, 0.9, 0.8, 0.6, 0.6, 0.6, 0.6, 0.5, 0.6, 0.4, 0.8],
                      [0.5, 0.5, 0.9, 0.5, 0.9, 1.0, 0.9, 0.6, 0.7, 0.5, 0.7, 0.8, 0.5, 0.5, 0.9],
                      [0.8, 1.0, 1.0, 0.6, 0.8, 0.9, 1.0, 0.9, 0.9, 0.5, 0.8, 0.5, 0.7, 0.7, 0.8],
                      [0.9, 0.8, 0.5, 0.7, 0.6, 0.6, 0.9, 1.0, 0.4, 0.7, 0.5, 0.8, 0.6, 0.5, 0.6],
                      [0.6, 1.0, 0.9, 0.8, 0.6, 0.7, 0.9, 0.4, 1.0, 0.9, 0.7, 0.9, 0.7, 1.0, 0.5],
                      [1.0, 0.4, 0.7, 0.7, 0.6, 0.5, 0.5, 0.7, 0.9, 1.0, 0.9, 0.6, 0.6, 0.9, 0.6],
                      [0.9, 0.7, 0.4, 0.9, 0.6, 0.7, 0.8, 0.5, 0.7, 0.9, 1.0, 0.7, 0.4, 0.7, 0.7],
                      [0.4, 0.8, 0.7, 0.7, 0.5, 0.8, 0.5, 0.8, 0.9, 0.6, 0.7, 1.0, 0.7, 0.5, 0.9],
                      [0.9, 0.7, 0.8, 0.9, 0.6, 0.5, 0.7, 0.6, 0.7, 0.6, 0.4, 0.7, 1.0, 0.6, 0.6],
                      [0.7, 1.0, 0.7, 0.7, 0.4, 0.5, 0.7, 0.5, 1.0, 0.9, 0.7, 0.5, 0.6, 1.0, 0.9],
                      [0.6, 0.6, 0.7, 0.8, 0.8, 0.9, 0.8, 0.6, 0.5, 0.6, 0.7, 0.9, 0.6, 0.9, 1.0]]

    def name(self):
        return "LF04"


class LF05(MK):
    '''MK05 15工件*4设备'''
    def __init__(self):
        super().__init__()
        self.efficency = [[0.99, 0.98, 0.9, 0.91],
                          [0.98, 1.13, 0.93, 0.93],
                          [0.9, 0.93, 1.02, 0.98],
                          [0.91, 0.93, 0.98, 1.12]]
        self.learning_rate = [[-0.16, -0.23, -0.24, -0.18],
                              [-0.23, -0.23, -0.15, -0.19],
                              [-0.24, -0.15, -0.29, -0.28],
                              [-0.18, -0.19, -0.28, -0.28]]
        self.forgetting_rate = [[0.15, 0.16, 0.23, 0.16],
                                [0.16, 0.18, 0.19, 0.25],
                                [0.23, 0.19, 0.24, 0.21],
                                [0.16, 0.25, 0.21, 0.23]]
        self.delta = [[1.0, 0.4, 0.4, 0.7, 0.8, 1.0, 1.0, 0.8, 0.6, 0.4, 0.9, 0.7, 0.8, 0.5, 0.5],
                      [0.4, 1.0, 0.9, 0.5, 0.7, 0.8, 0.7, 0.6, 0.8, 0.7, 0.5, 1.0, 0.8, 0.5, 0.5],
                      [0.4, 0.9, 1.0, 0.8, 0.5, 0.6, 0.8, 0.7, 1.0, 0.5, 0.7, 0.4, 0.5, 0.6, 0.9],
                      [0.7, 0.5, 0.8, 1.0, 0.5, 0.6, 0.6, 0.4, 0.5, 0.7, 0.9, 0.7, 0.4, 0.7, 0.7],
                      [0.8, 0.7, 0.5, 0.5, 1.0, 0.5, 0.5, 0.6, 0.4, 0.8, 0.6, 0.5, 1.0, 0.5, 0.9],
                      [1.0, 0.8, 0.6, 0.6, 0.5, 1.0, 0.8, 0.8, 0.4, 0.8, 0.4, 0.7, 0.7, 0.8, 0.9],
                      [1.0, 0.7, 0.8, 0.6, 0.5, 0.8, 1.0, 0.7, 0.9, 0.5, 0.8, 0.6, 0.6, 1.0, 0.5],
                      [0.8, 0.6, 0.7, 0.4, 0.6, 0.8, 0.7, 1.0, 0.9, 0.8, 0.8, 0.9, 0.7, 1.0, 0.4],
                      [0.6, 0.8, 1.0, 0.5, 0.4, 0.4, 0.9, 0.9, 1.0, 0.6, 0.5, 0.7, 0.5, 0.9, 0.5],
                      [0.4, 0.7, 0.5, 0.7, 0.8, 0.8, 0.5, 0.8, 0.6, 1.0, 0.9, 0.7, 0.6, 0.8, 1.0],
                      [0.9, 0.5, 0.7, 0.9, 0.6, 0.4, 0.8, 0.8, 0.5, 0.9, 1.0, 0.8, 0.8, 0.5, 0.6],
                      [0.7, 1.0, 0.4, 0.7, 0.5, 0.7, 0.6, 0.9, 0.7, 0.7, 0.8, 1.0, 0.4, 0.9, 0.8],
                      [0.8, 0.8, 0.5, 0.4, 1.0, 0.7, 0.6, 0.7, 0.5, 0.6, 0.8, 0.4, 1.0, 0.4, 0.9],
                      [0.5, 0.5, 0.6, 0.7, 0.5, 0.8, 1.0, 1.0, 0.9, 0.8, 0.5, 0.9, 0.4, 1.0, 0.6],
                      [0.5, 0.5, 0.9, 0.7, 0.9, 0.9, 0.5, 0.4, 0.5, 1.0, 0.6, 0.8, 0.9, 0.6, 1.0]]

    def name(self):
        return "LF05"


class LF06(MK):
    '''MK06 10工件*15设备'''
    def __init__(self):
        super().__init__()
        self.efficency = [[0.99, 0.93, 1.13, 0.96, 1.02, 1.05, 1.06, 0.95, 0.94, 1.05, 0.88, 0.99, 1.05, 1.07, 0.88],
                          [0.93, 0.89, 1.14, 1.04, 1.1, 1.02, 0.96, 0.86, 0.96, 1.14, 1.08, 1.02, 0.92, 1.04, 1.05],
                          [1.13, 1.14, 1.14, 0.92, 0.88, 0.97, 1.05, 0.9, 1.1, 1.0, 1.04, 1.05, 0.87, 1.14, 1.09],
                          [0.96, 1.04, 0.92, 0.86, 0.95, 0.86, 0.99, 1.02, 1.15, 1.07, 0.94, 1.03, 1.15, 0.89, 0.97],
                          [1.02, 1.1, 0.88, 0.95, 1.15, 0.97, 1.11, 0.93, 1.01, 0.9, 0.94, 1.01, 1.06, 0.87, 0.94],
                          [1.05, 1.02, 0.97, 0.86, 0.97, 1.0, 1.14, 1.02, 1.09, 0.86, 0.99, 1.11, 0.9, 0.86, 1.03],
                          [1.06, 0.96, 1.05, 0.99, 1.11, 1.14, 1.1, 1.09, 0.98, 0.93, 0.99, 1.01, 1.1, 1.1, 1.09],
                          [0.95, 0.86, 0.9, 1.02, 0.93, 1.02, 1.09, 0.92, 1.12, 1.03, 1.09, 1.04, 1.1, 1.09, 0.99],
                          [0.94, 0.96, 1.1, 1.15, 1.01, 1.09, 0.98, 1.12, 1.06, 1.11, 1.08, 0.96, 1.06, 1.04, 1.05],
                          [1.05, 1.14, 1.0, 1.07, 0.9, 0.86, 0.93, 1.03, 1.11, 1.01, 0.95, 0.89, 1.09, 0.94, 0.98],
                          [0.88, 1.08, 1.04, 0.94, 0.94, 0.99, 0.99, 1.09, 1.08, 0.95, 1.08, 1.11, 0.87, 1.05, 0.85],
                          [0.99, 1.02, 1.05, 1.03, 1.01, 1.11, 1.01, 1.04, 0.96, 0.89, 1.11, 0.93, 1.13, 0.93, 0.94],
                          [1.05, 0.92, 0.87, 1.15, 1.06, 0.9, 1.1, 1.1, 1.06, 1.09, 0.87, 1.13, 0.93, 0.92, 0.93],
                          [1.07, 1.04, 1.14, 0.89, 0.87, 0.86, 1.1, 1.09, 1.04, 0.94, 1.05, 0.93, 0.92, 0.89, 0.88],
                          [0.88, 1.05, 1.09, 0.97, 0.94, 1.03, 1.09, 0.99, 1.05, 0.98, 0.85, 0.94, 0.93, 0.88, 0.86]]
        self.learning_rate = [[-0.22, -0.17, -0.19, -0.18, -0.27, -0.3, -0.27, -0.22, -0.29, -0.26, -0.18, -0.22, -0.2, -0.22, -0.24],
                              [-0.17, -0.29, -0.19, -0.15, -0.28, -0.3, -0.22, -0.25, -0.29, -0.16, -0.27, -0.23, -0.23, -0.16, -0.23],
                              [-0.19, -0.19, -0.19, -0.17, -0.28, -0.24, -0.18, -0.25, -0.27, -0.16, -0.24, -0.21, -0.2, -0.19, -0.21],
                              [-0.18, -0.15, -0.17, -0.29, -0.21, -0.3, -0.27, -0.21, -0.21, -0.23, -0.27, -0.22, -0.15, -0.18, -0.17],
                              [-0.27, -0.28, -0.28, -0.21, -0.19, -0.17, -0.23, -0.24, -0.23, -0.17, -0.21, -0.2, -0.21, -0.2, -0.21],
                              [-0.3, -0.3, -0.24, -0.3, -0.17, -0.19, -0.15, -0.22, -0.17, -0.19, -0.18, -0.2, -0.16, -0.29, -0.29],
                              [-0.27, -0.22, -0.18, -0.27, -0.23, -0.15, -0.24, -0.19, -0.23, -0.27, -0.2, -0.19, -0.29, -0.22, -0.21],
                              [-0.22, -0.25, -0.25, -0.21, -0.24, -0.22, -0.19, -0.15, -0.22, -0.19, -0.15, -0.19, -0.27, -0.24, -0.25],
                              [-0.29, -0.29, -0.27, -0.21, -0.23, -0.17, -0.23, -0.22, -0.28, -0.3, -0.29, -0.26, -0.21, -0.22, -0.22],
                              [-0.26, -0.16, -0.16, -0.23, -0.17, -0.19, -0.27, -0.19, -0.3, -0.28, -0.26, -0.23, -0.2, -0.17, -0.28],
                              [-0.18, -0.27, -0.24, -0.27, -0.21, -0.18, -0.2, -0.15, -0.29, -0.26, -0.22, -0.27, -0.29, -0.22, -0.26],
                              [-0.22, -0.23, -0.21, -0.22, -0.2, -0.2, -0.19, -0.19, -0.26, -0.23, -0.27, -0.21, -0.18, -0.27, -0.29],
                              [-0.2, -0.23, -0.2, -0.15, -0.21, -0.16, -0.29, -0.27, -0.21, -0.2, -0.29, -0.18, -0.26, -0.18, -0.17],
                              [-0.22, -0.16, -0.19, -0.18, -0.2, -0.29, -0.22, -0.24, -0.22, -0.17, -0.22, -0.27, -0.18, -0.2, -0.18],
                              [-0.24, -0.23, -0.21, -0.17, -0.21, -0.29, -0.21, -0.25, -0.22, -0.28, -0.26, -0.29, -0.17, -0.18, -0.16]]
        self.forgetting_rate = [[0.18, 0.21, 0.21, 0.24, 0.16, 0.17, 0.16, 0.18, 0.25, 0.17, 0.2, 0.24, 0.2, 0.21, 0.22],
                                [0.21, 0.22, 0.2, 0.25, 0.19, 0.19, 0.21, 0.21, 0.16, 0.22, 0.16, 0.21, 0.21, 0.21, 0.16],
                                [0.21, 0.2, 0.21, 0.22, 0.22, 0.21, 0.18, 0.25, 0.23, 0.22, 0.19, 0.24, 0.21, 0.25, 0.15],
                                [0.24, 0.25, 0.22, 0.16, 0.15, 0.22, 0.2, 0.15, 0.18, 0.21, 0.18, 0.22, 0.2, 0.2, 0.17],
                                [0.16, 0.19, 0.22, 0.15, 0.21, 0.16, 0.18, 0.21, 0.25, 0.17, 0.17, 0.15, 0.24, 0.22, 0.22],
                                [0.17, 0.19, 0.21, 0.22, 0.16, 0.21, 0.22, 0.18, 0.24, 0.24, 0.19, 0.2, 0.19, 0.18, 0.21],
                                [0.16, 0.21, 0.18, 0.2, 0.18, 0.22, 0.23, 0.2, 0.22, 0.21, 0.19, 0.25, 0.22, 0.2, 0.22],
                                [0.18, 0.21, 0.25, 0.15, 0.21, 0.18, 0.2, 0.23, 0.23, 0.18, 0.16, 0.23, 0.23, 0.22, 0.17],
                                [0.25, 0.16, 0.23, 0.18, 0.25, 0.24, 0.22, 0.23, 0.18, 0.23, 0.23, 0.17, 0.19, 0.23, 0.23],
                                [0.17, 0.22, 0.22, 0.21, 0.17, 0.24, 0.21, 0.18, 0.23, 0.2, 0.22, 0.2, 0.17, 0.2, 0.2],
                                [0.2, 0.16, 0.19, 0.18, 0.17, 0.19, 0.19, 0.16, 0.23, 0.22, 0.19, 0.16, 0.18, 0.22, 0.25],
                                [0.24, 0.21, 0.24, 0.22, 0.15, 0.2, 0.25, 0.23, 0.17, 0.2, 0.16, 0.17, 0.19, 0.23, 0.18],
                                [0.2, 0.21, 0.21, 0.2, 0.24, 0.19, 0.22, 0.23, 0.19, 0.17, 0.18, 0.19, 0.21, 0.16, 0.19],
                                [0.21, 0.21, 0.25, 0.2, 0.22, 0.18, 0.2, 0.22, 0.23, 0.2, 0.22, 0.23, 0.16, 0.21, 0.23],
                                [0.22, 0.16, 0.15, 0.17, 0.22, 0.21, 0.22, 0.17, 0.23, 0.2, 0.25, 0.18, 0.19, 0.23, 0.21]]
        self.delta = [[1.0, 0.8, 0.9, 0.5, 0.9, 0.5, 0.7, 0.5, 0.5, 0.9],
                      [0.8, 1.0, 0.8, 0.6, 0.8, 0.8, 0.7, 0.6, 0.6, 1.0],
                      [0.9, 0.8, 1.0, 0.6, 0.5, 0.9, 0.6, 0.5, 0.4, 0.6],
                      [0.5, 0.6, 0.6, 1.0, 0.5, 0.6, 0.5, 0.9, 0.8, 0.7],
                      [0.9, 0.8, 0.5, 0.5, 1.0, 0.9, 0.7, 0.8, 0.6, 0.5],
                      [0.5, 0.8, 0.9, 0.6, 0.9, 1.0, 0.9, 0.8, 0.5, 0.5],
                      [0.7, 0.7, 0.6, 0.5, 0.7, 0.9, 1.0, 0.8, 0.7, 0.5],
                      [0.5, 0.6, 0.5, 0.9, 0.8, 0.8, 0.8, 1.0, 0.9, 0.9],
                      [0.5, 0.6, 0.4, 0.8, 0.6, 0.5, 0.7, 0.9, 1.0, 0.7],
                      [0.9, 1.0, 0.6, 0.7, 0.5, 0.5, 0.5, 0.9, 0.7, 1.0]]

    def name(self):
        return "LF06"


class LF07(MK):
    '''MK07 20工件*5设备'''
    def __init__(self):
        super().__init__()
        self.efficency = [[1.03, 1.05, 0.96, 0.9, 1.1],
                          [1.05, 1.04, 0.94, 1.08, 0.92],
                          [0.96, 0.94, 1.13, 1.11, 0.94],
                          [0.9, 1.08, 1.11, 1.02, 0.91],
                          [1.1, 0.92, 0.94, 0.91, 1.13]]
        self.learning_rate = [[-0.27, -0.19, -0.18, -0.26, -0.16],
                              [-0.19, -0.27, -0.28, -0.15, -0.19],
                              [-0.18, -0.28, -0.25, -0.15, -0.28],
                              [-0.26, -0.15, -0.15, -0.21, -0.16],
                              [-0.16, -0.19, -0.28, -0.16, -0.17]]

        self.forgetting_rate = [[0.17, 0.23, 0.23, 0.23, 0.19],
                                [0.23, 0.16, 0.22, 0.2, 0.21],
                                [0.23, 0.22, 0.19, 0.19, 0.18],
                                [0.23, 0.2, 0.19, 0.16, 0.25],
                                [0.19, 0.21, 0.18, 0.25, 0.2]]

        self.delta = [[1.0, 0.9, 0.4, 0.5, 0.8, 0.9, 0.6, 0.5, 0.9, 0.6, 0.6, 0.4, 0.7, 0.9, 0.6, 0.6, 0.7, 0.6, 0.6, 0.7],
                      [0.9, 1.0, 0.8, 0.8, 1.0, 0.9, 0.7, 0.4, 0.9, 0.6, 0.5, 0.8, 0.4, 1.0, 0.5, 0.8, 0.8, 0.9, 0.9, 0.5],
                      [0.4, 0.8, 1.0, 0.8, 0.5, 0.5, 0.5, 0.5, 0.7, 0.7, 0.8, 0.5, 1.0, 0.5, 0.4, 0.9, 1.0, 0.5, 0.6, 0.7],
                      [0.5, 0.8, 0.8, 1.0, 0.5, 0.6, 0.9, 1.0, 0.4, 0.4, 0.6, 0.7, 1.0, 0.4, 0.5, 0.8, 0.8, 0.8, 0.4, 0.7],
                      [0.8, 1.0, 0.5, 0.5, 1.0, 0.6, 0.6, 0.8, 0.8, 0.8, 0.5, 0.6, 0.9, 0.9, 0.8, 0.7, 0.9, 0.5, 0.9, 0.5],
                      [0.9, 0.9, 0.5, 0.6, 0.6, 1.0, 0.8, 0.6, 0.6, 0.6, 0.5, 0.6, 0.7, 0.9, 0.7, 0.9, 0.6, 0.5, 0.8, 0.9],
                      [0.6, 0.7, 0.5, 0.9, 0.6, 0.8, 1.0, 0.8, 0.9, 0.9, 0.6, 0.5, 0.9, 0.6, 0.7, 1.0, 0.8, 0.5, 1.0, 0.8],
                      [0.5, 0.4, 0.5, 1.0, 0.8, 0.6, 0.8, 1.0, 0.7, 1.0, 0.8, 0.5, 0.5, 0.8, 0.5, 0.7, 0.5, 0.7, 0.4, 0.7],
                      [0.9, 0.9, 0.7, 0.4, 0.8, 0.6, 0.9, 0.7, 1.0, 0.9, 0.8, 0.8, 0.5, 0.5, 0.6, 0.8, 1.0, 0.7, 0.7, 0.6],
                      [0.6, 0.6, 0.7, 0.4, 0.8, 0.6, 0.9, 1.0, 0.9, 1.0, 0.4, 0.9, 0.9, 0.5, 0.9, 0.4, 0.7, 0.8, 0.4, 0.8],
                      [0.6, 0.5, 0.8, 0.6, 0.5, 0.5, 0.6, 0.8, 0.8, 0.4, 1.0, 0.4, 0.4, 0.7, 0.8, 0.6, 1.0, 0.9, 0.7, 0.9],
                      [0.4, 0.8, 0.5, 0.7, 0.6, 0.6, 0.5, 0.5, 0.8, 0.9, 0.4, 1.0, 0.8, 0.8, 0.8, 1.0, 0.5, 0.7, 0.6, 1.0],
                      [0.7, 0.4, 1.0, 1.0, 0.9, 0.7, 0.9, 0.5, 0.5, 0.9, 0.4, 0.8, 1.0, 0.6, 0.6, 0.8, 0.6, 0.8, 0.7, 0.8],
                      [0.9, 1.0, 0.5, 0.4, 0.9, 0.9, 0.6, 0.8, 0.5, 0.5, 0.7, 0.8, 0.6, 1.0, 1.0, 0.6, 0.7, 1.0, 0.7, 0.9],
                      [0.6, 0.5, 0.4, 0.5, 0.8, 0.7, 0.7, 0.5, 0.6, 0.9, 0.8, 0.8, 0.6, 1.0, 1.0, 0.4, 0.5, 0.5, 0.6, 0.4],
                      [0.6, 0.8, 0.9, 0.8, 0.7, 0.9, 1.0, 0.7, 0.8, 0.4, 0.6, 1.0, 0.8, 0.6, 0.4, 1.0, 0.9, 0.9, 0.5, 0.5],
                      [0.7, 0.8, 1.0, 0.8, 0.9, 0.6, 0.8, 0.5, 1.0, 0.7, 1.0, 0.5, 0.6, 0.7, 0.5, 0.9, 1.0, 0.6, 0.5, 0.8],
                      [0.6, 0.9, 0.5, 0.8, 0.5, 0.5, 0.5, 0.7, 0.7, 0.8, 0.9, 0.7, 0.8, 1.0, 0.5, 0.9, 0.6, 1.0, 1.0, 0.4],
                      [0.6, 0.9, 0.6, 0.4, 0.9, 0.8, 1.0, 0.4, 0.7, 0.4, 0.7, 0.6, 0.7, 0.7, 0.6, 0.5, 0.5, 1.0, 1.0, 0.8],
                      [0.7, 0.5, 0.7, 0.7, 0.5, 0.9, 0.8, 0.7, 0.6, 0.8, 0.9, 1.0, 0.8, 0.9, 0.4, 0.5, 0.8, 0.4, 0.8, 1.0]]

    def name(self):
        return "LF07"


class LF08(MK):
    '''MK08 20工件*10设备'''
    def __init__(self):
        super().__init__()
        self.efficency = [[1.03, 0.86, 1.03, 0.94, 1.12, 0.89, 1.09, 1.06, 0.86, 0.99],
                          [0.86, 1.06, 0.98, 0.9, 1.03, 1.08, 1.05, 1.09, 0.85, 0.87],
                          [1.03, 0.98, 1.1, 0.99, 0.95, 0.91, 1.01, 1.12, 0.94, 0.93],
                          [0.94, 0.9, 0.99, 1.06, 1.07, 1.0, 0.87, 1.02, 0.97, 0.91],
                          [1.12, 1.03, 0.95, 1.07, 1.1, 1.14, 1.04, 0.99, 1.14, 0.9],
                          [0.89, 1.08, 0.91, 1.0, 1.14, 0.97, 1.01, 0.92, 0.89, 1.0],
                          [1.09, 1.05, 1.01, 0.87, 1.04, 1.01, 0.98, 0.93, 1.0, 1.04],
                          [1.06, 1.09, 1.12, 1.02, 0.99, 0.92, 0.93, 0.85, 0.88, 0.94],
                          [0.86, 0.85, 0.94, 0.97, 1.14, 0.89, 1.0, 0.88, 1.1, 0.91],
                          [0.99, 0.87, 0.93, 0.91, 0.9, 1.0, 1.04, 0.94, 0.91, 0.94]]
        self.learning_rate = [[-0.22, -0.23, -0.23, -0.21, -0.3, -0.22, -0.19, -0.2, -0.2, -0.15],
                              [-0.23, -0.3, -0.22, -0.21, -0.26, -0.22, -0.16, -0.3, -0.27, -0.17],
                              [-0.23, -0.22, -0.23, -0.18, -0.18, -0.29, -0.25, -0.24, -0.23, -0.17],
                              [-0.21, -0.21, -0.18, -0.18, -0.19, -0.19, -0.27, -0.2, -0.16, -0.21],
                              [-0.3, -0.26, -0.18, -0.19, -0.27, -0.17, -0.26, -0.27, -0.27, -0.29],
                              [-0.22, -0.22, -0.29, -0.19, -0.17, -0.19, -0.26, -0.18, -0.3, -0.25],
                              [-0.19, -0.16, -0.25, -0.27, -0.26, -0.26, -0.21, -0.22, -0.27, -0.29],
                              [-0.2, -0.3, -0.24, -0.2, -0.27, -0.18, -0.22, -0.28, -0.27, -0.19],
                              [-0.2, -0.27, -0.23, -0.16, -0.27, -0.3, -0.27, -0.27, -0.23, -0.27],
                              [-0.15, -0.17, -0.17, -0.21, -0.29, -0.25, -0.29, -0.19, -0.27, -0.16]]
        self.forgetting_rate = [[0.17, 0.17, 0.19, 0.17, 0.17, 0.18, 0.19, 0.2, 0.23, 0.15],
                                [0.17, 0.21, 0.16, 0.23, 0.16, 0.23, 0.18, 0.25, 0.19, 0.18],
                                [0.19, 0.16, 0.2, 0.21, 0.2, 0.24, 0.17, 0.24, 0.19, 0.18],
                                [0.17, 0.23, 0.21, 0.16, 0.19, 0.15, 0.21, 0.15, 0.22, 0.24],
                                [0.17, 0.16, 0.2, 0.19, 0.19, 0.16, 0.2, 0.19, 0.2, 0.17],
                                [0.18, 0.23, 0.24, 0.15, 0.16, 0.22, 0.22, 0.25, 0.23, 0.18],
                                [0.19, 0.18, 0.17, 0.21, 0.2, 0.22, 0.23, 0.16, 0.22, 0.21],
                                [0.2, 0.25, 0.24, 0.15, 0.19, 0.25, 0.16, 0.22, 0.16, 0.23],
                                [0.23, 0.19, 0.19, 0.22, 0.2, 0.23, 0.22, 0.16, 0.18, 0.2],
                                [0.15, 0.18, 0.18, 0.24, 0.17, 0.18, 0.21, 0.23, 0.2, 0.17]]
        self.delta = [[1.0, 0.6, 0.6, 0.6, 0.6, 0.5, 0.6, 0.7, 0.9, 0.7, 0.5, 0.9, 0.6, 0.6, 0.6, 0.9, 0.5, 0.4, 0.7, 1.0],
                      [0.6, 1.0, 0.8, 0.5, 0.5, 0.6, 0.9, 0.9, 0.6, 0.9, 0.6, 1.0, 1.0, 0.4, 0.7, 0.8, 0.7, 0.5, 0.8, 0.8],
                      [0.6, 0.8, 1.0, 0.6, 0.5, 0.7, 0.5, 0.9, 0.7, 0.9, 0.4, 0.8, 0.7, 0.7, 0.6, 0.8, 0.4, 0.7, 0.8, 0.8],
                      [0.6, 0.5, 0.6, 1.0, 0.7, 0.8, 0.8, 0.6, 0.5, 0.6, 0.4, 0.4, 0.9, 0.9, 0.5, 0.8, 1.0, 0.8, 0.4, 0.7],
                      [0.6, 0.5, 0.5, 0.7, 1.0, 0.8, 0.7, 0.8, 1.0, 0.9, 0.9, 0.7, 0.7, 0.6, 0.6, 0.9, 0.4, 0.9, 1.0, 0.7],
                      [0.5, 0.6, 0.7, 0.8, 0.8, 1.0, 0.6, 0.7, 0.8, 0.9, 0.7, 0.8, 0.4, 1.0, 0.5, 0.4, 0.7, 0.4, 0.9, 0.7],
                      [0.6, 0.9, 0.5, 0.8, 0.7, 0.6, 1.0, 0.7, 0.8, 0.6, 0.6, 0.9, 0.9, 0.8, 0.6, 0.8, 0.5, 0.7, 1.0, 0.5],
                      [0.7, 0.9, 0.9, 0.6, 0.8, 0.7, 0.7, 1.0, 0.7, 0.5, 0.6, 0.9, 0.7, 0.5, 0.4, 0.6, 1.0, 0.4, 0.8, 0.6],
                      [0.9, 0.6, 0.7, 0.5, 1.0, 0.8, 0.8, 0.7, 1.0, 0.9, 0.5, 0.5, 0.4, 0.6, 0.8, 0.5, 0.6, 0.8, 0.5, 0.8],
                      [0.7, 0.9, 0.9, 0.6, 0.9, 0.9, 0.6, 0.5, 0.9, 1.0, 0.5, 0.5, 0.4, 0.7, 0.8, 0.6, 0.6, 0.6, 0.8, 0.8],
                      [0.5, 0.6, 0.4, 0.4, 0.9, 0.7, 0.6, 0.6, 0.5, 0.5, 1.0, 0.5, 0.9, 0.7, 0.6, 0.5, 0.7, 0.7, 0.8, 0.6],
                      [0.9, 1.0, 0.8, 0.4, 0.7, 0.8, 0.9, 0.9, 0.5, 0.5, 0.5, 1.0, 0.7, 0.4, 0.8, 1.0, 0.9, 0.5, 0.9, 0.4],
                      [0.6, 1.0, 0.7, 0.9, 0.7, 0.4, 0.9, 0.7, 0.4, 0.4, 0.9, 0.7, 1.0, 0.6, 0.8, 0.9, 0.6, 0.4, 0.6, 0.6],
                      [0.6, 0.4, 0.7, 0.9, 0.6, 1.0, 0.8, 0.5, 0.6, 0.7, 0.7, 0.4, 0.6, 1.0, 0.7, 0.7, 0.8, 0.7, 1.0, 0.6],
                      [0.6, 0.7, 0.6, 0.5, 0.6, 0.5, 0.6, 0.4, 0.8, 0.8, 0.6, 0.8, 0.8, 0.7, 1.0, 0.9, 0.7, 0.5, 0.8, 0.5],
                      [0.9, 0.8, 0.8, 0.8, 0.9, 0.4, 0.8, 0.6, 0.5, 0.6, 0.5, 1.0, 0.9, 0.7, 0.9, 1.0, 0.5, 0.8, 0.5, 0.8],
                      [0.5, 0.7, 0.4, 1.0, 0.4, 0.7, 0.5, 1.0, 0.6, 0.6, 0.7, 0.9, 0.6, 0.8, 0.7, 0.5, 1.0, 0.5, 0.8, 0.6],
                      [0.4, 0.5, 0.7, 0.8, 0.9, 0.4, 0.7, 0.4, 0.8, 0.6, 0.7, 0.5, 0.4, 0.7, 0.5, 0.8, 0.5, 1.0, 0.7, 0.9],
                      [0.7, 0.8, 0.8, 0.4, 1.0, 0.9, 1.0, 0.8, 0.5, 0.8, 0.8, 0.9, 0.6, 1.0, 0.8, 0.5, 0.8, 0.7, 1.0, 0.4],
                      [1.0, 0.8, 0.8, 0.7, 0.7, 0.7, 0.5, 0.6, 0.8, 0.8, 0.6, 0.4, 0.6, 0.6, 0.5, 0.8, 0.6, 0.9, 0.4, 1.0]]

    def name(self):
        return "LF08"


class LF09(MK):
    '''MK09 20工件*10设备'''
    def __init__(self):
        super().__init__()
        self.efficency = [[1.11, 1.15, 1.0, 1.01, 0.89, 1.04, 1.04, 1.08, 0.91, 0.93],
                          [1.15, 0.95, 0.93, 1.03, 1.05, 1.14, 0.92, 0.86, 0.98, 1.01],
                          [1.0, 0.93, 1.14, 1.05, 0.92, 0.86, 1.15, 1.04, 0.93, 0.96],
                          [1.01, 1.03, 1.05, 1.07, 1.09, 1.06, 0.86, 1.14, 1.12, 0.88],
                          [0.89, 1.05, 0.92, 1.09, 0.92, 0.95, 0.98, 0.99, 1.09, 0.87],
                          [1.04, 1.14, 0.86, 1.06, 0.95, 0.92, 0.9, 0.96, 1.03, 1.13],
                          [1.04, 0.92, 1.15, 0.86, 0.98, 0.9, 0.89, 0.99, 0.93, 0.99],
                          [1.08, 0.86, 1.04, 1.14, 0.99, 0.96, 0.99, 1.0, 0.87, 0.95],
                          [0.91, 0.98, 0.93, 1.12, 1.09, 1.03, 0.93, 0.87, 0.86, 0.9],
                          [0.93, 1.01, 0.96, 0.88, 0.87, 1.13, 0.99, 0.95, 0.9, 1.03]]
        self.learning_rate = [[-0.25, -0.16, -0.19, -0.16, -0.23, -0.21, -0.26, -0.28, -0.23, -0.27],
                              [-0.16, -0.28, -0.27, -0.29, -0.15, -0.26, -0.24, -0.24, -0.29, -0.27],
                              [-0.19, -0.27, -0.21, -0.19, -0.19, -0.16, -0.26, -0.26, -0.15, -0.21],
                              [-0.16, -0.29, -0.19, -0.18, -0.24, -0.27, -0.22, -0.26, -0.26, -0.24],
                              [-0.23, -0.15, -0.19, -0.24, -0.28, -0.28, -0.26, -0.2, -0.17, -0.17],
                              [-0.21, -0.26, -0.16, -0.27, -0.28, -0.29, -0.15, -0.29, -0.24, -0.27],
                              [-0.26, -0.24, -0.26, -0.22, -0.26, -0.15, -0.26, -0.18, -0.17, -0.3],
                              [-0.28, -0.24, -0.26, -0.26, -0.2, -0.29, -0.18, -0.2, -0.26, -0.26],
                              [-0.23, -0.29, -0.15, -0.26, -0.17, -0.24, -0.17, -0.26, -0.29, -0.27],
                              [-0.27, -0.27, -0.21, -0.24, -0.17, -0.27, -0.3, -0.26, -0.27, -0.15]]
        self.forgetting_rate = [[0.19, 0.2, 0.2, 0.19, 0.18, 0.16, 0.2, 0.22, 0.23, 0.21],
                                [0.2, 0.2, 0.16, 0.18, 0.16, 0.17, 0.17, 0.25, 0.16, 0.19],
                                [0.2, 0.16, 0.23, 0.21, 0.22, 0.23, 0.22, 0.17, 0.24, 0.2],
                                [0.19, 0.18, 0.21, 0.2, 0.25, 0.23, 0.25, 0.24, 0.23, 0.23],
                                [0.18, 0.16, 0.22, 0.25, 0.16, 0.18, 0.22, 0.18, 0.22, 0.18],
                                [0.16, 0.17, 0.23, 0.23, 0.18, 0.23, 0.24, 0.23, 0.19, 0.23],
                                [0.2, 0.17, 0.22, 0.25, 0.22, 0.24, 0.21, 0.2, 0.2, 0.23],
                                [0.22, 0.25, 0.17, 0.24, 0.18, 0.23, 0.2, 0.23, 0.17, 0.18],
                                [0.23, 0.16, 0.24, 0.23, 0.22, 0.19, 0.2, 0.17, 0.25, 0.21],
                                [0.21, 0.19, 0.2, 0.23, 0.18, 0.23, 0.23, 0.18, 0.21, 0.18]]
        self.delta = [[1.0, 0.9, 0.5, 0.4, 0.4, 0.6, 0.6, 0.4, 0.7, 1.0, 0.6, 0.7, 0.6, 0.4, 0.5, 0.9, 0.6, 0.5, 0.6, 0.9],
                      [0.9, 1.0, 0.9, 0.5, 0.7, 0.5, 0.8, 0.7, 1.0, 0.6, 0.4, 1.0, 0.9, 0.5, 0.7, 0.8, 0.9, 0.5, 0.7, 0.5],
                      [0.5, 0.9, 1.0, 0.5, 0.8, 0.4, 1.0, 0.5, 0.9, 0.7, 0.5, 0.5, 0.9, 0.5, 0.4, 0.6, 0.5, 0.7, 0.7, 0.8],
                      [0.4, 0.5, 0.5, 1.0, 0.5, 0.8, 0.6, 0.9, 0.7, 0.5, 0.9, 0.7, 1.0, 0.9, 0.8, 0.8, 0.9, 0.5, 0.5, 0.7],
                      [0.4, 0.7, 0.8, 0.5, 1.0, 0.4, 0.9, 0.9, 0.7, 0.9, 0.8, 0.9, 0.5, 0.8, 1.0, 0.5, 1.0, 0.6, 1.0, 0.6],
                      [0.6, 0.5, 0.4, 0.8, 0.4, 1.0, 0.5, 0.7, 0.5, 0.7, 0.9, 0.9, 0.7, 0.6, 0.8, 0.4, 0.7, 0.9, 0.5, 0.5],
                      [0.6, 0.8, 1.0, 0.6, 0.9, 0.5, 1.0, 0.9, 1.0, 0.5, 0.7, 1.0, 0.9, 0.7, 0.5, 0.5, 0.9, 0.8, 0.5, 0.7],
                      [0.4, 0.7, 0.5, 0.9, 0.9, 0.7, 0.9, 1.0, 0.5, 0.5, 0.9, 0.9, 0.6, 0.6, 1.0, 0.7, 0.7, 0.9, 0.4, 0.6],
                      [0.7, 1.0, 0.9, 0.7, 0.7, 0.5, 1.0, 0.5, 1.0, 0.9, 0.5, 0.4, 0.7, 0.5, 0.6, 0.6, 1.0, 0.9, 0.7, 0.6],
                      [1.0, 0.6, 0.7, 0.5, 0.9, 0.7, 0.5, 0.5, 0.9, 1.0, 0.5, 0.8, 0.7, 0.7, 0.8, 0.4, 0.9, 0.9, 0.5, 0.4],
                      [0.6, 0.4, 0.5, 0.9, 0.8, 0.9, 0.7, 0.9, 0.5, 0.5, 1.0, 0.4, 0.7, 0.8, 0.5, 0.7, 0.6, 0.9, 0.8, 0.5],
                      [0.7, 1.0, 0.5, 0.7, 0.9, 0.9, 1.0, 0.9, 0.4, 0.8, 0.4, 1.0, 0.6, 0.4, 0.5, 0.8, 0.4, 0.8, 0.6, 0.9],
                      [0.6, 0.9, 0.9, 1.0, 0.5, 0.7, 0.9, 0.6, 0.7, 0.7, 0.7, 0.6, 1.0, 0.4, 0.9, 0.4, 0.9, 1.0, 0.6, 0.7],
                      [0.4, 0.5, 0.5, 0.9, 0.8, 0.6, 0.7, 0.6, 0.5, 0.7, 0.8, 0.4, 0.4, 1.0, 0.6, 0.6, 0.5, 0.6, 1.0, 1.0],
                      [0.5, 0.7, 0.4, 0.8, 1.0, 0.8, 0.5, 1.0, 0.6, 0.8, 0.5, 0.5, 0.9, 0.6, 1.0, 0.4, 0.5, 1.0, 0.8, 0.8],
                      [0.9, 0.8, 0.6, 0.8, 0.5, 0.4, 0.5, 0.7, 0.6, 0.4, 0.7, 0.8, 0.4, 0.6, 0.4, 1.0, 0.8, 0.6, 0.7, 0.4],
                      [0.6, 0.9, 0.5, 0.9, 1.0, 0.7, 0.9, 0.7, 1.0, 0.9, 0.6, 0.4, 0.9, 0.5, 0.5, 0.8, 1.0, 0.8, 0.9, 0.4],
                      [0.5, 0.5, 0.7, 0.5, 0.6, 0.9, 0.8, 0.9, 0.9, 0.9, 0.9, 0.8, 1.0, 0.6, 1.0, 0.6, 0.8, 1.0, 1.0, 0.4],
                      [0.6, 0.7, 0.7, 0.5, 1.0, 0.5, 0.5, 0.4, 0.7, 0.5, 0.8, 0.6, 0.6, 1.0, 0.8, 0.7, 0.9, 1.0, 1.0, 0.6],
                      [0.9, 0.5, 0.8, 0.7, 0.6, 0.5, 0.7, 0.6, 0.6, 0.4, 0.5, 0.9, 0.7, 1.0, 0.8, 0.4, 0.4, 0.4, 0.6, 1.0]]

    def name(self):
        return "LF09"


class LF10(MK):
    '''MK10 20工件*15设备'''
    def __init__(self):
        super().__init__()
        self.efficency = [[0.85, 0.88, 0.99, 0.93, 0.93, 1.14, 0.86, 0.94, 0.92, 0.97, 0.96, 0.93, 0.91, 0.95, 1.12],
                          [0.88, 0.96, 0.9, 0.87, 1.02, 1.1, 1.13, 0.92, 1.08, 1.05, 1.12, 0.91, 1.06, 0.97, 0.89],
                          [0.99, 0.9, 1.04, 1.07, 0.98, 1.11, 0.93, 1.05, 1.09, 1.02, 0.89, 0.97, 0.99, 1.06, 0.94],
                          [0.93, 0.87, 1.07, 1.14, 1.03, 1.11, 1.04, 1.04, 1.03, 0.98, 0.9, 0.86, 0.9, 0.85, 1.06],
                          [0.93, 1.02, 0.98, 1.03, 1.04, 0.89, 1.04, 0.9, 1.1, 0.86, 0.96, 1.14, 1.05, 1.13, 0.94],
                          [1.14, 1.1, 1.11, 1.11, 0.89, 0.89, 1.13, 0.99, 1.04, 1.12, 0.99, 0.89, 1.07, 0.94, 1.12],
                          [0.86, 1.13, 0.93, 1.04, 1.04, 1.13, 1.08, 0.99, 1.07, 1.05, 0.94, 1.03, 0.89, 1.04, 1.14],
                          [0.94, 0.92, 1.05, 1.04, 0.9, 0.99, 0.99, 0.92, 0.94, 0.85, 1.1, 1.02, 1.13, 0.95, 0.87],
                          [0.92, 1.08, 1.09, 1.03, 1.1, 1.04, 1.07, 0.94, 0.86, 1.07, 1.1, 1.03, 1.13, 1.06, 1.14],
                          [0.97, 1.05, 1.02, 0.98, 0.86, 1.12, 1.05, 0.85, 1.07, 0.94, 0.92, 0.94, 0.95, 1.11, 1.06],
                          [0.96, 1.12, 0.89, 0.9, 0.96, 0.99, 0.94, 1.1, 1.1, 0.92, 0.94, 0.88, 0.94, 0.93, 0.89],
                          [0.93, 0.91, 0.97, 0.86, 1.14, 0.89, 1.03, 1.02, 1.03, 0.94, 0.88, 1.04, 0.89, 0.97, 1.14],
                          [0.91, 1.06, 0.99, 0.9, 1.05, 1.07, 0.89, 1.13, 1.13, 0.95, 0.94, 0.89, 1.12, 0.88, 1.09],
                          [0.95, 0.97, 1.06, 0.85, 1.13, 0.94, 1.04, 0.95, 1.06, 1.11, 0.93, 0.97, 0.88, 1.06, 1.12],
                          [1.12, 0.89, 0.94, 1.06, 0.94, 1.12, 1.14, 0.87, 1.14, 1.06, 0.89, 1.14, 1.09, 1.12, 0.91]]
        self.learning_rate = [[-0.19, -0.25, -0.16, -0.26, -0.21, -0.29, -0.27, -0.27, -0.26, -0.19, -0.18, -0.29, -0.28, -0.19, -0.17],
                              [-0.25, -0.21, -0.27, -0.2, -0.24, -0.26, -0.27, -0.25, -0.29, -0.28, -0.15, -0.26, -0.27, -0.23, -0.15],
                              [-0.16, -0.27, -0.24, -0.19, -0.16, -0.21, -0.23, -0.18, -0.2, -0.21, -0.17, -0.23, -0.2, -0.23, -0.15],
                              [-0.26, -0.2, -0.19, -0.21, -0.28, -0.23, -0.2, -0.2, -0.16, -0.3, -0.16, -0.18, -0.15, -0.2, -0.29],
                              [-0.21, -0.24, -0.16, -0.28, -0.17, -0.17, -0.3, -0.21, -0.22, -0.21, -0.17, -0.17, -0.2, -0.19, -0.19],
                              [-0.29, -0.26, -0.21, -0.23, -0.17, -0.22, -0.29, -0.16, -0.22, -0.17, -0.27, -0.27, -0.19, -0.3, -0.17],
                              [-0.27, -0.27, -0.23, -0.2, -0.3, -0.29, -0.19, -0.28, -0.18, -0.19, -0.2, -0.25, -0.16, -0.2, -0.17],
                              [-0.27, -0.25, -0.18, -0.2, -0.21, -0.16, -0.28, -0.28, -0.23, -0.29, -0.21, -0.18, -0.22, -0.16, -0.28],
                              [-0.26, -0.29, -0.2, -0.16, -0.22, -0.22, -0.18, -0.23, -0.28, -0.24, -0.28, -0.2, -0.24, -0.24, -0.16],
                              [-0.19, -0.28, -0.21, -0.3, -0.21, -0.17, -0.19, -0.29, -0.24, -0.28, -0.19, -0.23, -0.21, -0.16, -0.23],
                              [-0.18, -0.15, -0.17, -0.16, -0.17, -0.27, -0.2, -0.21, -0.28, -0.19, -0.25, -0.21, -0.27, -0.28, -0.19],
                              [-0.29, -0.26, -0.23, -0.18, -0.17, -0.27, -0.25, -0.18, -0.2, -0.23, -0.21, -0.18, -0.29, -0.26, -0.3],
                              [-0.28, -0.27, -0.2, -0.15, -0.2, -0.19, -0.16, -0.22, -0.24, -0.21, -0.27, -0.29, -0.16, -0.23, -0.24],
                              [-0.19, -0.23, -0.23, -0.2, -0.19, -0.3, -0.2, -0.16, -0.24, -0.16, -0.28, -0.26, -0.23, -0.29, -0.23],
                              [-0.17, -0.15, -0.15, -0.29, -0.19, -0.17, -0.17, -0.28, -0.16, -0.23, -0.19, -0.3, -0.24, -0.23, -0.16]]
        self.forgetting_rate = [[0.19, 0.17, 0.2, 0.21, 0.23, 0.2, 0.2, 0.17, 0.23, 0.16, 0.18, 0.18, 0.24, 0.22, 0.17],
                                [0.17, 0.24, 0.22, 0.17, 0.17, 0.15, 0.24, 0.18, 0.24, 0.15, 0.18, 0.2, 0.16, 0.22, 0.17],
                                [0.2, 0.22, 0.21, 0.21, 0.18, 0.2, 0.16, 0.24, 0.21, 0.16, 0.19, 0.16, 0.25, 0.18, 0.2],
                                [0.21, 0.17, 0.21, 0.19, 0.23, 0.23, 0.21, 0.21, 0.17, 0.17, 0.22, 0.18, 0.18, 0.2, 0.18],
                                [0.23, 0.17, 0.18, 0.23, 0.21, 0.23, 0.19, 0.21, 0.16, 0.23, 0.2, 0.19, 0.16, 0.25, 0.2],
                                [0.2, 0.15, 0.2, 0.23, 0.23, 0.23, 0.16, 0.19, 0.25, 0.23, 0.16, 0.23, 0.24, 0.17, 0.23],
                                [0.2, 0.24, 0.16, 0.21, 0.19, 0.16, 0.23, 0.2, 0.25, 0.24, 0.17, 0.24, 0.22, 0.22, 0.23],
                                [0.17, 0.18, 0.24, 0.21, 0.21, 0.19, 0.2, 0.17, 0.17, 0.19, 0.2, 0.19, 0.16, 0.21, 0.22],
                                [0.23, 0.24, 0.21, 0.17, 0.16, 0.25, 0.25, 0.17, 0.21, 0.25, 0.16, 0.16, 0.2, 0.18, 0.21],
                                [0.16, 0.15, 0.16, 0.17, 0.23, 0.23, 0.24, 0.19, 0.25, 0.23, 0.22, 0.21, 0.22, 0.18, 0.16],
                                [0.18, 0.18, 0.19, 0.22, 0.2, 0.16, 0.17, 0.2, 0.16, 0.22, 0.25, 0.19, 0.19, 0.23, 0.17],
                                [0.18, 0.2, 0.16, 0.18, 0.19, 0.23, 0.24, 0.19, 0.16, 0.21, 0.19, 0.23, 0.16, 0.21, 0.23],
                                [0.24, 0.16, 0.25, 0.18, 0.16, 0.24, 0.22, 0.16, 0.2, 0.22, 0.19, 0.16, 0.17, 0.18, 0.21],
                                [0.22, 0.22, 0.18, 0.2, 0.25, 0.17, 0.22, 0.21, 0.18, 0.18, 0.23, 0.21, 0.18, 0.24, 0.16],
                                [0.17, 0.17, 0.2, 0.18, 0.2, 0.23, 0.23, 0.22, 0.21, 0.16, 0.17, 0.23, 0.21, 0.16, 0.17]]
        self.delta = [[1.0, 0.8, 0.6, 0.4, 0.4, 0.6, 0.8, 0.8, 0.8, 0.8, 0.6, 0.6, 0.6, 0.4, 1.0, 0.6, 0.7, 0.8, 1.0, 0.9],
                      [0.8, 1.0, 0.5, 0.9, 0.7, 0.4, 0.9, 0.5, 0.8, 0.9, 0.8, 0.5, 0.9, 0.6, 0.8, 0.8, 0.5, 0.9, 0.6, 0.5],
                      [0.6, 0.5, 1.0, 0.8, 0.9, 0.7, 0.9, 0.8, 0.7, 0.6, 0.5, 0.7, 1.0, 1.0, 0.7, 0.7, 0.4, 0.5, 0.5, 0.9],
                      [0.4, 0.9, 0.8, 1.0, 0.7, 0.6, 0.6, 0.5, 0.5, 0.9, 0.6, 0.7, 0.7, 0.9, 0.9, 0.4, 0.9, 0.9, 0.9, 0.6],
                      [0.4, 0.7, 0.9, 0.7, 1.0, 0.8, 1.0, 0.7, 0.6, 1.0, 0.7, 0.7, 0.5, 0.6, 0.6, 0.5, 0.5, 1.0, 0.7, 0.8],
                      [0.6, 0.4, 0.7, 0.6, 0.8, 1.0, 0.5, 0.8, 0.9, 0.9, 0.5, 0.6, 0.7, 0.7, 0.5, 0.9, 0.9, 0.8, 0.7, 0.5],
                      [0.8, 0.9, 0.9, 0.6, 1.0, 0.5, 1.0, 0.9, 0.8, 0.9, 0.5, 0.8, 0.9, 0.9, 0.6, 0.9, 0.6, 0.5, 0.9, 0.5],
                      [0.8, 0.5, 0.8, 0.5, 0.7, 0.8, 0.9, 1.0, 0.7, 0.9, 0.6, 1.0, 0.9, 0.5, 1.0, 0.7, 0.6, 0.8, 0.8, 0.4],
                      [0.8, 0.8, 0.7, 0.5, 0.6, 0.9, 0.8, 0.7, 1.0, 0.7, 0.5, 1.0, 0.9, 0.9, 0.6, 0.8, 0.9, 0.8, 0.4, 0.9],
                      [0.8, 0.9, 0.6, 0.9, 1.0, 0.9, 0.9, 0.9, 0.7, 1.0, 0.9, 0.8, 0.6, 0.9, 0.5, 0.8, 0.5, 0.6, 0.5, 0.7],
                      [0.6, 0.8, 0.5, 0.6, 0.7, 0.5, 0.5, 0.6, 0.5, 0.9, 1.0, 0.6, 0.8, 0.5, 0.5, 0.7, 0.4, 0.6, 0.5, 0.8],
                      [0.6, 0.5, 0.7, 0.7, 0.7, 0.6, 0.8, 1.0, 1.0, 0.8, 0.6, 1.0, 0.5, 0.4, 0.4, 0.9, 0.9, 0.6, 0.8, 0.6],
                      [0.6, 0.9, 1.0, 0.7, 0.5, 0.7, 0.9, 0.9, 0.9, 0.6, 0.8, 0.5, 1.0, 0.4, 0.8, 0.9, 0.8, 0.5, 0.6, 0.4],
                      [0.4, 0.6, 1.0, 0.9, 0.6, 0.7, 0.9, 0.5, 0.9, 0.9, 0.5, 0.4, 0.4, 1.0, 0.6, 0.8, 0.5, 0.7, 0.6, 0.8],
                      [1.0, 0.8, 0.7, 0.9, 0.6, 0.5, 0.6, 1.0, 0.6, 0.5, 0.5, 0.4, 0.8, 0.6, 1.0, 0.8, 0.8, 0.9, 0.6, 0.4],
                      [0.6, 0.8, 0.7, 0.4, 0.5, 0.9, 0.9, 0.7, 0.8, 0.8, 0.7, 0.9, 0.9, 0.8, 0.8, 1.0, 0.9, 0.7, 1.0, 1.0],
                      [0.7, 0.5, 0.4, 0.9, 0.5, 0.9, 0.6, 0.6, 0.9, 0.5, 0.4, 0.9, 0.8, 0.5, 0.8, 0.9, 1.0, 0.8, 1.0, 0.6],
                      [0.8, 0.9, 0.5, 0.9, 1.0, 0.8, 0.5, 0.8, 0.8, 0.6, 0.6, 0.6, 0.5, 0.7, 0.9, 0.7, 0.8, 1.0, 0.9, 0.7],
                      [1.0, 0.6, 0.5, 0.9, 0.7, 0.7, 0.9, 0.8, 0.4, 0.5, 0.5, 0.8, 0.6, 0.6, 0.6, 1.0, 1.0, 0.9, 1.0, 0.5],
                      [0.9, 0.5, 0.9, 0.6, 0.8, 0.5, 0.5, 0.4, 0.9, 0.7, 0.8, 0.6, 0.4, 0.8, 0.4, 1.0, 0.6, 0.7, 0.5, 1.0]]

    def name(self):
        return "LF10"


class LF11(MK):
    '''11a 15工件*8设备'''
    def __init__(self):
        super().__init__()
        self.efficency = [[0.97, 0.99, 0.99, 1.11, 1.08, 1.09, 1.1, 0.96],
                          [0.99, 0.92, 0.89, 1.15, 0.9, 0.88, 1.02, 0.97],
                          [0.99, 0.89, 1.08, 0.86, 1.14, 1.04, 0.97, 1.12],
                          [1.11, 1.15, 0.86, 1.04, 1.02, 0.94, 0.91, 0.88],
                          [1.08, 0.9, 1.14, 1.02, 0.87, 1.09, 0.89, 1.08],
                          [1.09, 0.88, 1.04, 0.94, 1.09, 1.14, 1.1, 1.01],
                          [1.1, 1.02, 0.97, 0.91, 0.89, 1.1, 1.09, 0.89],
                          [0.96, 0.97, 1.12, 0.88, 1.08, 1.01, 0.89, 1.1]]

        self.learning_rate = [[-0.25, -0.26, -0.27, -0.23, -0.16, -0.21, -0.21, -0.24],
                              [-0.26, -0.21, -0.22, -0.16, -0.28, -0.16, -0.19, -0.26],
                              [-0.27, -0.22, -0.29, -0.16, -0.27, -0.2, -0.18, -0.22],
                              [-0.23, -0.16, -0.16, -0.18, -0.26, -0.15, -0.22, -0.28],
                              [-0.16, -0.28, -0.27, -0.26, -0.22, -0.16, -0.25, -0.2],
                              [-0.21, -0.16, -0.2, -0.15, -0.16, -0.26, -0.16, -0.18],
                              [-0.21, -0.19, -0.18, -0.22, -0.25, -0.16, -0.16, -0.2],
                              [-0.24, -0.26, -0.22, -0.28, -0.2, -0.18, -0.2, -0.2]]

        self.forgetting_rate = [[0.18, 0.17, 0.23, 0.21, 0.19, 0.21, 0.2, 0.16],
                                [0.17, 0.19, 0.22, 0.23, 0.19, 0.16, 0.16, 0.19],
                                [0.23, 0.22, 0.21, 0.21, 0.24, 0.2, 0.16, 0.18],
                                [0.21, 0.23, 0.21, 0.21, 0.2, 0.2, 0.18, 0.24],
                                [0.19, 0.19, 0.24, 0.2, 0.19, 0.2, 0.16, 0.17],
                                [0.21, 0.16, 0.2, 0.2, 0.2, 0.17, 0.23, 0.24],
                                [0.2, 0.16, 0.16, 0.18, 0.16, 0.23, 0.25, 0.25],
                                [0.16, 0.19, 0.18, 0.24, 0.17, 0.24, 0.25, 0.2]]

        self.delta = [[1.0, 0.4, 0.4, 0.6, 0.7, 0.6, 0.9, 0.5, 0.8, 0.8, 0.6, 0.6, 0.6, 0.9, 0.9],
                      [0.4, 1.0, 0.9, 0.5, 1.0, 0.8, 0.4, 0.8, 0.6, 0.7, 0.6, 0.7, 0.8, 0.9, 0.6],
                      [0.4, 0.9, 1.0, 0.6, 0.6, 0.4, 1.0, 0.6, 0.5, 0.9, 0.9, 0.4, 1.0, 0.6, 0.4],
                      [0.6, 0.5, 0.6, 1.0, 0.7, 0.7, 0.9, 0.7, 1.0, 0.6, 0.8, 0.5, 0.4, 0.9, 0.6],
                      [0.7, 1.0, 0.6, 0.7, 1.0, 0.6, 0.7, 0.5, 0.9, 1.0, 0.8, 0.9, 0.6, 0.5, 0.8],
                      [0.6, 0.8, 0.4, 0.7, 0.6, 1.0, 0.7, 0.7, 1.0, 0.6, 0.6, 0.8, 0.8, 0.5, 0.7],
                      [0.9, 0.4, 1.0, 0.9, 0.7, 0.7, 1.0, 0.5, 0.8, 0.9, 0.5, 0.4, 0.6, 0.7, 0.7],
                      [0.5, 0.8, 0.6, 0.7, 0.5, 0.7, 0.5, 1.0, 0.5, 0.8, 0.9, 0.7, 0.5, 0.7, 0.6],
                      [0.8, 0.6, 0.5, 1.0, 0.9, 1.0, 0.8, 0.5, 1.0, 1.0, 0.4, 0.5, 0.9, 0.6, 0.6],
                      [0.8, 0.7, 0.9, 0.6, 1.0, 0.6, 0.9, 0.8, 1.0, 1.0, 0.8, 0.8, 0.9, 0.5, 0.8],
                      [0.6, 0.6, 0.9, 0.8, 0.8, 0.6, 0.5, 0.9, 0.4, 0.8, 1.0, 0.8, 0.9, 0.7, 0.6],
                      [0.6, 0.7, 0.4, 0.5, 0.9, 0.8, 0.4, 0.7, 0.5, 0.8, 0.8, 1.0, 0.9, 0.9, 0.6],
                      [0.6, 0.8, 1.0, 0.4, 0.6, 0.8, 0.6, 0.5, 0.9, 0.9, 0.9, 0.9, 1.0, 0.4, 0.6],
                      [0.9, 0.9, 0.6, 0.9, 0.5, 0.5, 0.7, 0.7, 0.6, 0.5, 0.7, 0.9, 0.4, 1.0, 0.4],
                      [0.9, 0.6, 0.4, 0.6, 0.8, 0.7, 0.7, 0.6, 0.6, 0.8, 0.6, 0.6, 0.6, 0.4, 1.0]]

    def name(self):
        return "LF11"


class LF12(MK):
    '''12a 15工件*8设备'''
    def __init__(self):
        super().__init__()
        self.efficency = [[1.1, 1.14, 0.88, 1.06, 1.06, 1.08, 1.13, 0.97],
                          [1.14, 0.91, 0.91, 0.92, 0.9, 0.88, 1.05, 1.09],
                          [0.88, 0.91, 0.91, 0.97, 1.12, 0.89, 0.9, 0.85],
                          [1.06, 0.92, 0.97, 0.85, 1.06, 0.87, 1.09, 0.96],
                          [1.06, 0.9, 1.12, 1.06, 1.01, 1.0, 1.06, 0.94],
                          [1.08, 0.88, 0.89, 0.87, 1.0, 0.97, 1.01, 0.94],
                          [1.13, 1.05, 0.9, 1.09, 1.06, 1.01, 1.14, 0.94],
                          [0.97, 1.09, 0.85, 0.96, 0.94, 0.94, 0.94, 1.12]]

        self.learning_rate = [[-0.23, -0.21, -0.18, -0.16, -0.27, -0.16, -0.2, -0.23],
                              [-0.21, -0.24, -0.22, -0.26, -0.25, -0.23, -0.29, -0.26],
                              [-0.18, -0.22, -0.28, -0.21, -0.17, -0.16, -0.24, -0.18],
                              [-0.16, -0.26, -0.21, -0.28, -0.22, -0.26, -0.26, -0.23],
                              [-0.27, -0.25, -0.17, -0.22, -0.16, -0.16, -0.23, -0.19],
                              [-0.16, -0.23, -0.16, -0.26, -0.16, -0.28, -0.24, -0.22],
                              [-0.2, -0.29, -0.24, -0.26, -0.23, -0.24, -0.29, -0.2],
                              [-0.23, -0.26, -0.18, -0.23, -0.19, -0.22, -0.2, -0.25]]

        self.forgetting_rate = [[0.2, 0.17, 0.15, 0.16, 0.22, 0.18, 0.17, 0.15],
                                [0.17, 0.2, 0.22, 0.18, 0.23, 0.15, 0.21, 0.2],
                                [0.15, 0.22, 0.16, 0.22, 0.22, 0.21, 0.17, 0.22],
                                [0.16, 0.18, 0.22, 0.2, 0.17, 0.23, 0.24, 0.22],
                                [0.22, 0.23, 0.22, 0.17, 0.22, 0.21, 0.22, 0.22],
                                [0.18, 0.15, 0.21, 0.23, 0.21, 0.21, 0.23, 0.23],
                                [0.17, 0.21, 0.17, 0.24, 0.22, 0.23, 0.23, 0.19],
                                [0.15, 0.2, 0.22, 0.22, 0.22, 0.23, 0.19, 0.19]]

        self.delta = [[1.0, 0.4, 0.9, 0.9, 0.9, 0.7, 0.7, 0.7, 0.6, 0.8, 0.5, 0.6, 0.6, 0.5, 0.5],
                      [0.4, 1.0, 0.7, 0.8, 0.9, 0.9, 0.6, 0.8, 0.7, 0.4, 0.7, 0.5, 0.9, 0.5, 0.6],
                      [0.9, 0.7, 1.0, 0.7, 0.9, 0.5, 0.6, 0.7, 0.8, 0.8, 0.5, 0.7, 0.8, 0.9, 0.8],
                      [0.9, 0.8, 0.7, 1.0, 0.9, 0.7, 0.5, 0.9, 0.5, 0.6, 0.6, 0.8, 0.9, 0.9, 0.8],
                      [0.9, 0.9, 0.9, 0.9, 1.0, 0.9, 0.9, 0.8, 0.5, 0.5, 0.8, 0.4, 0.9, 0.8, 0.5],
                      [0.7, 0.9, 0.5, 0.7, 0.9, 1.0, 0.7, 0.8, 0.7, 0.5, 0.5, 0.6, 0.5, 0.9, 0.8],
                      [0.7, 0.6, 0.6, 0.5, 0.9, 0.7, 1.0, 0.4, 1.0, 0.7, 0.7, 0.9, 0.8, 0.6, 1.0],
                      [0.7, 0.8, 0.7, 0.9, 0.8, 0.8, 0.4, 1.0, 0.5, 0.6, 0.5, 0.9, 0.4, 0.7, 0.7],
                      [0.6, 0.7, 0.8, 0.5, 0.5, 0.7, 1.0, 0.5, 1.0, 0.8, 0.7, 0.4, 0.5, 0.6, 0.4],
                      [0.8, 0.4, 0.8, 0.6, 0.5, 0.5, 0.7, 0.6, 0.8, 1.0, 0.6, 0.7, 0.5, 0.9, 0.6],
                      [0.5, 0.7, 0.5, 0.6, 0.8, 0.5, 0.7, 0.5, 0.7, 0.6, 1.0, 0.8, 0.5, 0.8, 0.6],
                      [0.6, 0.5, 0.7, 0.8, 0.4, 0.6, 0.9, 0.9, 0.4, 0.7, 0.8, 1.0, 0.7, 0.6, 0.7],
                      [0.6, 0.9, 0.8, 0.9, 0.9, 0.5, 0.8, 0.4, 0.5, 0.5, 0.5, 0.7, 1.0, 0.8, 0.5],
                      [0.5, 0.5, 0.9, 0.9, 0.8, 0.9, 0.6, 0.7, 0.6, 0.9, 0.8, 0.6, 0.8, 1.0, 0.9],
                      [0.5, 0.6, 0.8, 0.8, 0.5, 0.8, 1.0, 0.7, 0.4, 0.6, 0.6, 0.7, 0.5, 0.9, 1.0]]


    def name(self):
        return "LF12"


class LF13(MK):
    '''13a 20工件*10设备'''
    def __init__(self):
        super().__init__()
        self.efficency = [[1.1, 1.1, 1.06, 0.95, 1.08, 1.08, 0.99, 1.06, 0.92, 0.97],
                          [1.1, 0.88, 0.88, 1.1, 0.89, 1.0, 1.14, 0.92, 0.94, 0.91],
                          [1.06, 0.88, 1.14, 0.91, 0.87, 1.11, 1.07, 1.03, 0.9, 0.92],
                          [0.95, 1.1, 0.91, 1.06, 0.95, 1.01, 0.86, 1.02, 0.94, 1.07],
                          [1.08, 0.89, 0.87, 0.95, 1.04, 0.88, 1.05, 1.08, 1.03, 0.97],
                          [1.08, 1.0, 1.11, 1.01, 0.88, 0.9, 1.0, 0.92, 1.08, 0.94],
                          [0.99, 1.14, 1.07, 0.86, 1.05, 1.0, 0.98, 0.96, 0.92, 0.96],
                          [1.06, 0.92, 1.03, 1.02, 1.08, 0.92, 0.96, 0.85, 0.93, 0.95],
                          [0.92, 0.94, 0.9, 0.94, 1.03, 1.08, 0.92, 0.93, 1.1, 1.14],
                          [0.97, 0.91, 0.92, 1.07, 0.97, 0.94, 0.96, 0.95, 1.14, 1.0]]

        self.learning_rate = [[-0.23, -0.29, -0.27, -0.17, -0.28, -0.18, -0.15, -0.23, -0.27, -0.16],
                              [-0.29, -0.17, -0.17, -0.3, -0.19, -0.25, -0.15, -0.17, -0.2, -0.29],
                              [-0.27, -0.17, -0.21, -0.23, -0.22, -0.27, -0.26, -0.23, -0.25, -0.23],
                              [-0.17, -0.3, -0.23, -0.21, -0.19, -0.2, -0.17, -0.19, -0.25, -0.16],
                              [-0.28, -0.19, -0.22, -0.19, -0.27, -0.17, -0.25, -0.25, -0.23, -0.23],
                              [-0.18, -0.25, -0.27, -0.2, -0.17, -0.21, -0.19, -0.28, -0.24, -0.17],
                              [-0.15, -0.15, -0.26, -0.17, -0.25, -0.19, -0.24, -0.27, -0.19, -0.17],
                              [-0.23, -0.17, -0.23, -0.19, -0.25, -0.28, -0.27, -0.17, -0.26, -0.23],
                              [-0.27, -0.2, -0.25, -0.25, -0.23, -0.24, -0.19, -0.26, -0.22, -0.19],
                              [-0.16, -0.29, -0.23, -0.16, -0.23, -0.17, -0.17, -0.23, -0.19, -0.19]]

        self.forgetting_rate = [[0.23, 0.23, 0.17, 0.21, 0.19, 0.21, 0.19, 0.18, 0.19, 0.17],
                                [0.23, 0.22, 0.17, 0.21, 0.21, 0.16, 0.21, 0.16, 0.16, 0.19],
                                [0.17, 0.17, 0.24, 0.22, 0.21, 0.16, 0.16, 0.17, 0.17, 0.23],
                                [0.21, 0.21, 0.22, 0.18, 0.16, 0.19, 0.17, 0.15, 0.24, 0.23],
                                [0.19, 0.21, 0.21, 0.16, 0.18, 0.21, 0.21, 0.16, 0.18, 0.23],
                                [0.21, 0.16, 0.16, 0.19, 0.21, 0.2, 0.21, 0.16, 0.17, 0.18],
                                [0.19, 0.21, 0.16, 0.17, 0.21, 0.21, 0.2, 0.18, 0.23, 0.2],
                                [0.18, 0.16, 0.17, 0.15, 0.16, 0.16, 0.18, 0.19, 0.22, 0.19],
                                [0.19, 0.16, 0.17, 0.24, 0.18, 0.17, 0.23, 0.22, 0.2, 0.21],
                                [0.17, 0.19, 0.23, 0.23, 0.23, 0.18, 0.2, 0.19, 0.21, 0.24]]

        self.delta = [[1.0, 0.5, 0.8, 0.6, 0.7, 0.5, 0.7, 0.6, 1.0, 0.7, 0.9, 0.6, 0.6, 0.7, 0.5, 0.8, 0.6, 0.8, 0.9, 0.4],
                      [0.5, 1.0, 0.4, 0.9, 0.9, 0.4, 0.7, 0.6, 0.8, 0.6, 0.9, 0.9, 0.8, 0.4, 0.6, 0.9, 0.8, 0.5, 0.8, 0.9],
                      [0.8, 0.4, 1.0, 0.7, 0.7, 0.6, 0.6, 0.5, 0.5, 1.0, 0.8, 0.7, 0.7, 0.9, 0.5, 0.6, 0.8, 0.8, 0.7, 0.7],
                      [0.6, 0.9, 0.7, 1.0, 0.6, 0.9, 0.6, 0.9, 0.4, 0.7, 0.7, 0.9, 0.6, 0.5, 0.7, 0.6, 0.7, 0.7, 0.4, 0.8],
                      [0.7, 0.9, 0.7, 0.6, 1.0, 0.4, 0.6, 0.7, 0.7, 0.7, 0.6, 0.9, 1.0, 0.7, 0.5, 0.7, 0.6, 0.8, 0.8, 0.4],
                      [0.5, 0.4, 0.6, 0.9, 0.4, 1.0, 0.6, 1.0, 0.4, 0.5, 0.4, 0.7, 0.5, 0.4, 0.5, 0.5, 0.6, 0.8, 0.8, 0.7],
                      [0.7, 0.7, 0.6, 0.6, 0.6, 0.6, 1.0, 0.7, 0.8, 0.5, 0.9, 0.9, 0.8, 0.8, 0.5, 0.6, 1.0, 0.6, 0.6, 0.6],
                      [0.6, 0.6, 0.5, 0.9, 0.7, 1.0, 0.7, 1.0, 0.5, 0.6, 0.8, 0.9, 0.6, 0.8, 0.6, 0.9, 0.6, 0.6, 0.5, 0.9],
                      [1.0, 0.8, 0.5, 0.4, 0.7, 0.4, 0.8, 0.5, 1.0, 1.0, 0.9, 0.9, 0.9, 0.8, 0.5, 0.5, 0.7, 0.7, 0.6, 0.6],
                      [0.7, 0.6, 1.0, 0.7, 0.7, 0.5, 0.5, 0.6, 1.0, 1.0, 0.8, 0.6, 0.4, 0.9, 0.8, 0.8, 0.6, 0.7, 0.8, 0.9],
                      [0.9, 0.9, 0.8, 0.7, 0.6, 0.4, 0.9, 0.8, 0.9, 0.8, 1.0, 0.9, 0.7, 0.5, 0.4, 0.7, 0.6, 0.6, 0.7, 0.4],
                      [0.6, 0.9, 0.7, 0.9, 0.9, 0.7, 0.9, 0.9, 0.9, 0.6, 0.9, 1.0, 0.8, 0.7, 0.4, 0.7, 1.0, 0.5, 0.6, 0.8],
                      [0.6, 0.8, 0.7, 0.6, 1.0, 0.5, 0.8, 0.6, 0.9, 0.4, 0.7, 0.8, 1.0, 0.9, 0.8, 0.4, 0.7, 0.8, 0.6, 0.9],
                      [0.7, 0.4, 0.9, 0.5, 0.7, 0.4, 0.8, 0.8, 0.8, 0.9, 0.5, 0.7, 0.9, 1.0, 0.9, 0.7, 0.4, 1.0, 0.5, 0.7],
                      [0.5, 0.6, 0.5, 0.7, 0.5, 0.5, 0.5, 0.6, 0.5, 0.8, 0.4, 0.4, 0.8, 0.9, 1.0, 0.9, 0.9, 0.6, 0.6, 0.8],
                      [0.8, 0.9, 0.6, 0.6, 0.7, 0.5, 0.6, 0.9, 0.5, 0.8, 0.7, 0.7, 0.4, 0.7, 0.9, 1.0, 0.5, 0.8, 0.5, 0.7],
                      [0.6, 0.8, 0.8, 0.7, 0.6, 0.6, 1.0, 0.6, 0.7, 0.6, 0.6, 1.0, 0.7, 0.4, 0.9, 0.5, 1.0, 0.9, 0.9, 0.6],
                      [0.8, 0.5, 0.8, 0.7, 0.8, 0.8, 0.6, 0.6, 0.7, 0.7, 0.6, 0.5, 0.8, 1.0, 0.6, 0.8, 0.9, 1.0, 0.5, 0.7],
                      [0.9, 0.8, 0.7, 0.4, 0.8, 0.8, 0.6, 0.5, 0.6, 0.8, 0.7, 0.6, 0.6, 0.5, 0.6, 0.5, 0.9, 0.5, 1.0, 0.7],
                      [0.4, 0.9, 0.7, 0.8, 0.4, 0.7, 0.6, 0.9, 0.6, 0.9, 0.4, 0.8, 0.9, 0.7, 0.8, 0.7, 0.6, 0.7, 0.7, 1.0]]


    def name(self):
        return "LF13"


class LF14(MK):
    '''la31 30工件*10设备'''
    def __init__(self):
        super().__init__()
        self.efficency = [[0.97, 0.88, 1.03, 1.02, 0.99, 0.86, 0.95, 1.05, 1.11, 1.1],
                          [0.88, 1.14, 1.14, 0.9, 1.12, 1.04, 1.04, 0.99, 1.01, 0.86],
                          [1.03, 1.14, 1.06, 0.88, 1.03, 1.11, 1.06, 0.87, 0.88, 0.99],
                          [1.02, 0.9, 0.88, 0.87, 0.99, 0.95, 1.08, 0.98, 1.05, 1.09],
                          [0.99, 1.12, 1.03, 0.99, 1.14, 0.92, 1.04, 0.99, 1.07, 0.97],
                          [0.86, 1.04, 1.11, 0.95, 0.92, 1.1, 1.0, 0.95, 0.9, 1.0],
                          [0.95, 1.04, 1.06, 1.08, 1.04, 1.0, 1.14, 0.88, 1.02, 0.96],
                          [1.05, 0.99, 0.87, 0.98, 0.99, 0.95, 0.88, 0.98, 0.89, 1.11],
                          [1.11, 1.01, 0.88, 1.05, 1.07, 0.9, 1.02, 0.89, 0.91, 0.93],
                          [1.1, 0.86, 0.99, 1.09, 0.97, 1.0, 0.96, 1.11, 0.93, 0.97]]

        self.learning_rate = [[-0.27, -0.17, -0.29, -0.21, -0.18, -0.23, -0.2, -0.19, -0.28, -0.28],
                              [-0.17, -0.28, -0.2, -0.29, -0.19, -0.29, -0.22, -0.24, -0.19, -0.18],
                              [-0.29, -0.2, -0.16, -0.25, -0.23, -0.23, -0.18, -0.25, -0.27, -0.22],
                              [-0.21, -0.29, -0.25, -0.29, -0.19, -0.21, -0.22, -0.26, -0.27, -0.24],
                              [-0.18, -0.19, -0.23, -0.19, -0.28, -0.22, -0.19, -0.17, -0.25, -0.21],
                              [-0.23, -0.29, -0.23, -0.21, -0.22, -0.25, -0.24, -0.19, -0.16, -0.24],
                              [-0.2, -0.22, -0.18, -0.22, -0.19, -0.24, -0.24, -0.25, -0.26, -0.16],
                              [-0.19, -0.24, -0.25, -0.26, -0.17, -0.19, -0.25, -0.27, -0.23, -0.29],
                              [-0.28, -0.19, -0.27, -0.27, -0.25, -0.16, -0.26, -0.23, -0.17, -0.18],
                              [-0.28, -0.18, -0.22, -0.24, -0.21, -0.24, -0.16, -0.29, -0.18, -0.25]]

        self.forgetting_rate = [[0.2, 0.2, 0.22, 0.19, 0.21, 0.17, 0.23, 0.2, 0.18, 0.18],
                                [0.2, 0.2, 0.24, 0.23, 0.21, 0.2, 0.24, 0.2, 0.19, 0.2],
                                [0.22, 0.24, 0.17, 0.18, 0.23, 0.23, 0.25, 0.21, 0.21, 0.21],
                                [0.19, 0.23, 0.18, 0.17, 0.22, 0.2, 0.16, 0.19, 0.2, 0.22],
                                [0.21, 0.21, 0.23, 0.22, 0.18, 0.18, 0.23, 0.16, 0.15, 0.17],
                                [0.17, 0.2, 0.23, 0.2, 0.18, 0.22, 0.15, 0.24, 0.2, 0.18],
                                [0.23, 0.24, 0.25, 0.16, 0.23, 0.15, 0.21, 0.2, 0.18, 0.21],
                                [0.2, 0.2, 0.21, 0.19, 0.16, 0.24, 0.2, 0.17, 0.25, 0.24],
                                [0.18, 0.19, 0.21, 0.2, 0.15, 0.2, 0.18, 0.25, 0.24, 0.2],
                                [0.18, 0.2, 0.21, 0.22, 0.17, 0.18, 0.21, 0.24, 0.2, 0.23]]

        self.delta =  [[1.0, 0.6, 0.9, 0.8, 0.8, 1.0, 0.6, 0.6, 0.6, 1.0, 0.5, 0.4, 0.9, 0.6, 1.0, 0.6, 0.6, 0.5, 1.0, 0.4, 0.6, 0.8, 0.5, 0.8, 0.5, 0.9, 1.0, 0.5, 0.4, 0.7],
                       [0.6, 1.0, 0.7, 0.6, 0.8, 0.9, 0.9, 0.6, 0.9, 0.5, 0.8, 0.9, 1.0, 0.7, 0.8, 0.8, 0.5, 0.7, 1.0, 0.5, 0.8, 0.7, 0.8, 0.7, 1.0, 0.8, 0.6, 0.5, 0.9, 0.9],
                       [0.9, 0.7, 1.0, 0.8, 0.5, 0.8, 0.5, 0.7, 1.0, 0.7, 0.8, 1.0, 0.4, 0.5, 0.6, 1.0, 0.4, 1.0, 0.9, 1.0, 0.5, 0.7, 0.7, 0.8, 1.0, 1.0, 0.9, 0.5, 0.5, 0.5],
                       [0.8, 0.6, 0.8, 1.0, 0.8, 0.9, 0.8, 0.8, 0.6, 0.7, 0.9, 0.8, 0.6, 0.8, 0.9, 0.9, 0.4, 1.0, 0.8, 0.9, 0.5, 0.7, 0.6, 0.5, 0.9, 0.8, 0.9, 0.9, 0.7, 0.9],
                       [0.8, 0.8, 0.5, 0.8, 1.0, 0.8, 0.6, 0.7, 0.9, 0.6, 0.8, 0.4, 1.0, 0.7, 0.9, 0.8, 0.7, 0.6, 0.5, 0.6, 0.8, 0.6, 0.6, 0.7, 0.7, 0.9, 0.4, 0.5, 0.9, 0.9],
                       [1.0, 0.9, 0.8, 0.9, 0.8, 1.0, 0.5, 0.5, 0.8, 0.5, 0.9, 0.9, 0.4, 0.7, 0.8, 1.0, 0.9, 0.5, 0.7, 0.7, 0.7, 0.8, 0.8, 0.6, 0.9, 0.8, 0.7, 0.6, 0.9, 0.6],
                       [0.6, 0.9, 0.5, 0.8, 0.6, 0.5, 1.0, 0.7, 0.8, 0.5, 0.9, 0.4, 0.9, 0.7, 0.6, 0.9, 0.8, 0.5, 0.7, 0.6, 0.8, 0.8, 1.0, 0.5, 0.6, 0.7, 0.5, 1.0, 0.9, 0.5],
                       [0.6, 0.6, 0.7, 0.8, 0.7, 0.5, 0.7, 1.0, 0.9, 0.8, 0.9, 0.8, 0.9, 0.4, 0.7, 0.7, 0.7, 0.9, 0.9, 0.5, 0.6, 0.6, 0.5, 0.7, 0.6, 0.7, 1.0, 0.4, 0.4, 0.8],
                       [0.6, 0.9, 1.0, 0.6, 0.9, 0.8, 0.8, 0.9, 1.0, 0.7, 0.9, 0.6, 1.0, 0.6, 1.0, 0.5, 0.7, 0.8, 0.5, 0.8, 0.9, 0.7, 0.9, 0.4, 0.9, 0.5, 1.0, 0.5, 0.7, 0.7],
                       [1.0, 0.5, 0.7, 0.7, 0.6, 0.5, 0.5, 0.8, 0.7, 1.0, 0.9, 0.8, 0.8, 0.7, 0.7, 0.8, 0.8, 0.7, 0.6, 1.0, 0.6, 0.4, 1.0, 0.7, 0.9, 0.5, 0.6, 0.6, 0.7, 0.7],
                       [0.5, 0.8, 0.8, 0.9, 0.8, 0.9, 0.9, 0.9, 0.9, 0.9, 1.0, 0.7, 0.4, 0.7, 0.7, 0.4, 0.9, 0.6, 0.6, 0.8, 0.6, 0.6, 0.4, 0.8, 0.6, 0.9, 1.0, 0.9, 0.7, 1.0],
                       [0.4, 0.9, 1.0, 0.8, 0.4, 0.9, 0.4, 0.8, 0.6, 0.8, 0.7, 1.0, 0.7, 0.6, 0.6, 1.0, 0.9, 0.8, 0.9, 0.8, 0.5, 0.4, 0.8, 0.4, 0.9, 0.9, 0.5, 0.9, 0.6, 0.5],
                       [0.9, 1.0, 0.4, 0.6, 1.0, 0.4, 0.9, 0.9, 1.0, 0.8, 0.4, 0.7, 1.0, 0.9, 0.8, 0.6, 0.9, 0.7, 0.6, 0.6, 0.7, 0.9, 0.8, 0.6, 0.8, 0.7, 0.8, 1.0, 0.5, 0.8],
                       [0.6, 0.7, 0.5, 0.8, 0.7, 0.7, 0.7, 0.4, 0.6, 0.7, 0.7, 0.6, 0.9, 1.0, 0.5, 0.9, 0.5, 0.9, 0.9, 0.9, 0.5, 0.8, 0.5, 0.8, 0.8, 0.4, 0.9, 0.7, 0.9, 0.7],
                       [1.0, 0.8, 0.6, 0.9, 0.9, 0.8, 0.6, 0.7, 1.0, 0.7, 0.7, 0.6, 0.8, 0.5, 1.0, 0.9, 0.5, 0.8, 0.6, 0.8, 0.6, 0.5, 1.0, 0.8, 0.9, 0.6, 1.0, 0.5, 0.5, 0.5],
                       [0.6, 0.8, 1.0, 0.9, 0.8, 1.0, 0.9, 0.7, 0.5, 0.8, 0.4, 1.0, 0.6, 0.9, 0.9, 1.0, 0.7, 0.4, 1.0, 0.9, 0.6, 0.6, 0.4, 0.9, 0.5, 0.5, 0.8, 0.4, 0.4, 0.8],
                       [0.6, 0.5, 0.4, 0.4, 0.7, 0.9, 0.8, 0.7, 0.7, 0.8, 0.9, 0.9, 0.9, 0.5, 0.5, 0.7, 1.0, 0.8, 1.0, 0.5, 0.6, 0.9, 0.7, 0.7, 0.7, 0.5, 0.7, 0.7, 0.9, 0.9],
                       [0.5, 0.7, 1.0, 1.0, 0.6, 0.5, 0.5, 0.9, 0.8, 0.7, 0.6, 0.8, 0.7, 0.9, 0.8, 0.4, 0.8, 1.0, 0.4, 0.9, 0.6, 0.7, 0.8, 0.7, 0.7, 1.0, 0.5, 0.8, 1.0, 0.6],
                       [1.0, 1.0, 0.9, 0.8, 0.5, 0.7, 0.7, 0.9, 0.5, 0.6, 0.6, 0.9, 0.6, 0.9, 0.6, 1.0, 1.0, 0.4, 1.0, 0.5, 0.4, 0.8, 0.9, 0.4, 0.8, 0.7, 0.4, 0.9, 0.9, 0.9],
                       [0.4, 0.5, 1.0, 0.9, 0.6, 0.7, 0.6, 0.5, 0.8, 1.0, 0.8, 0.8, 0.6, 0.9, 0.8, 0.9, 0.5, 0.9, 0.5, 1.0, 0.9, 0.7, 0.7, 0.9, 1.0, 0.6, 0.8, 0.6, 1.0, 0.8],
                       [0.6, 0.8, 0.5, 0.5, 0.8, 0.7, 0.8, 0.6, 0.9, 0.6, 0.6, 0.5, 0.7, 0.5, 0.6, 0.6, 0.6, 0.6, 0.4, 0.9, 1.0, 0.8, 0.8, 0.8, 0.8, 0.4, 0.8, 0.8, 0.5, 0.6],
                       [0.8, 0.7, 0.7, 0.7, 0.6, 0.8, 0.8, 0.6, 0.7, 0.4, 0.6, 0.4, 0.9, 0.8, 0.5, 0.6, 0.9, 0.7, 0.8, 0.7, 0.8, 1.0, 1.0, 0.6, 0.9, 0.5, 0.7, 0.7, 0.7, 0.7],
                       [0.5, 0.8, 0.7, 0.6, 0.6, 0.8, 1.0, 0.5, 0.9, 1.0, 0.4, 0.8, 0.8, 0.5, 1.0, 0.4, 0.7, 0.8, 0.9, 0.7, 0.8, 1.0, 1.0, 1.0, 0.5, 0.4, 0.7, 0.7, 0.4, 0.7],
                       [0.8, 0.7, 0.8, 0.5, 0.7, 0.6, 0.5, 0.7, 0.4, 0.7, 0.8, 0.4, 0.6, 0.8, 0.8, 0.9, 0.7, 0.7, 0.4, 0.9, 0.8, 0.6, 1.0, 1.0, 0.6, 0.9, 0.8, 0.5, 0.8, 0.8],
                       [0.5, 1.0, 1.0, 0.9, 0.7, 0.9, 0.6, 0.6, 0.9, 0.9, 0.6, 0.9, 0.8, 0.8, 0.9, 0.5, 0.7, 0.7, 0.8, 1.0, 0.8, 0.9, 0.5, 0.6, 1.0, 0.9, 0.5, 0.6, 1.0, 0.7],
                       [0.9, 0.8, 1.0, 0.8, 0.9, 0.8, 0.7, 0.7, 0.5, 0.5, 0.9, 0.9, 0.7, 0.4, 0.6, 0.5, 0.5, 1.0, 0.7, 0.6, 0.4, 0.5, 0.4, 0.9, 0.9, 1.0, 0.8, 0.8, 0.9, 0.9],
                       [1.0, 0.6, 0.9, 0.9, 0.4, 0.7, 0.5, 1.0, 1.0, 0.6, 1.0, 0.5, 0.8, 0.9, 1.0, 0.8, 0.7, 0.5, 0.4, 0.8, 0.8, 0.7, 0.7, 0.8, 0.5, 0.8, 1.0, 0.9, 1.0, 0.4],
                       [0.5, 0.5, 0.5, 0.9, 0.5, 0.6, 1.0, 0.4, 0.5, 0.6, 0.9, 0.9, 1.0, 0.7, 0.5, 0.4, 0.7, 0.8, 0.9, 0.6, 0.8, 0.7, 0.7, 0.5, 0.6, 0.8, 0.9, 1.0, 0.5, 0.9],
                       [0.4, 0.9, 0.5, 0.7, 0.9, 0.9, 0.9, 0.4, 0.7, 0.7, 0.7, 0.6, 0.5, 0.9, 0.5, 0.4, 0.9, 1.0, 0.9, 1.0, 0.5, 0.7, 0.4, 0.8, 1.0, 0.9, 1.0, 0.5, 1.0, 1.0],
                       [0.7, 0.9, 0.5, 0.9, 0.9, 0.6, 0.5, 0.8, 0.7, 0.7, 1.0, 0.5, 0.8, 0.7, 0.5, 0.8, 0.9, 0.6, 0.9, 0.8, 0.6, 0.7, 0.7, 0.8, 0.7, 0.9, 0.4, 0.9, 1.0, 1.0]]



    def name(self):
        return "LF14"


class LF15(MK):
    '''la32 30工件*10设备'''
    def __init__(self):
        super().__init__()
        self.efficency =  [[0.97, 0.88, 1.03, 1.02, 0.99, 0.86, 0.95, 1.05, 1.11, 1.1],
                           [0.88, 1.14, 1.14, 0.9, 1.12, 1.04, 1.04, 0.99, 1.01, 0.86],
                           [1.03, 1.14, 1.06, 0.88, 1.03, 1.11, 1.06, 0.87, 0.88, 0.99],
                           [1.02, 0.9, 0.88, 0.87, 0.99, 0.95, 1.08, 0.98, 1.05, 1.09],
                           [0.99, 1.12, 1.03, 0.99, 1.14, 0.92, 1.04, 0.99, 1.07, 0.97],
                           [0.86, 1.04, 1.11, 0.95, 0.92, 1.1, 1.0, 0.95, 0.9, 1.0],
                           [0.95, 1.04, 1.06, 1.08, 1.04, 1.0, 1.14, 0.88, 1.02, 0.96],
                           [1.05, 0.99, 0.87, 0.98, 0.99, 0.95, 0.88, 0.98, 0.89, 1.11],
                           [1.11, 1.01, 0.88, 1.05, 1.07, 0.9, 1.02, 0.89, 0.91, 0.93],
                           [1.1, 0.86, 0.99, 1.09, 0.97, 1.0, 0.96, 1.11, 0.93, 0.97]]


        self.learning_rate = [[-0.15, -0.2, -0.26, -0.28, -0.23, -0.23, -0.27, -0.18, -0.16, -0.28],
                              [-0.2, -0.17, -0.28, -0.26, -0.26, -0.24, -0.16, -0.26, -0.22, -0.28],
                              [-0.26, -0.28, -0.27, -0.28, -0.21, -0.28, -0.27, -0.25, -0.25, -0.21],
                              [-0.28, -0.26, -0.28, -0.16, -0.24, -0.22, -0.18, -0.22, -0.19, -0.29],
                              [-0.23, -0.26, -0.21, -0.24, -0.19, -0.18, -0.26, -0.2, -0.27, -0.22],
                              [-0.23, -0.24, -0.28, -0.22, -0.18, -0.18, -0.27, -0.24, -0.21, -0.23],
                              [-0.27, -0.16, -0.27, -0.18, -0.26, -0.27, -0.18, -0.19, -0.25, -0.28],
                              [-0.18, -0.26, -0.25, -0.22, -0.2, -0.24, -0.19, -0.28, -0.22, -0.16],
                              [-0.16, -0.22, -0.25, -0.19, -0.27, -0.21, -0.25, -0.22, -0.3, -0.22],
                              [-0.28, -0.28, -0.21, -0.29, -0.22, -0.23, -0.28, -0.16, -0.22, -0.23]]

        self.forgetting_rate = [[-0.27, -0.17, -0.29, -0.21, -0.18, -0.23, -0.2, -0.19, -0.28, -0.28],
                                [-0.17, -0.28, -0.2, -0.29, -0.19, -0.29, -0.22, -0.24, -0.19, -0.18],
                                [-0.29, -0.2, -0.16, -0.25, -0.23, -0.23, -0.18, -0.25, -0.27, -0.22],
                                [-0.21, -0.29, -0.25, -0.29, -0.19, -0.21, -0.22, -0.26, -0.27, -0.24],
                                [-0.18, -0.19, -0.23, -0.19, -0.28, -0.22, -0.19, -0.17, -0.25, -0.21],
                                [-0.23, -0.29, -0.23, -0.21, -0.22, -0.25, -0.24, -0.19, -0.16, -0.24],
                                [-0.2, -0.22, -0.18, -0.22, -0.19, -0.24, -0.24, -0.25, -0.26, -0.16],
                                [-0.19, -0.24, -0.25, -0.26, -0.17, -0.19, -0.25, -0.27, -0.23, -0.29],
                                [-0.28, -0.19, -0.27, -0.27, -0.25, -0.16, -0.26, -0.23, -0.17, -0.18],
                                [-0.28, -0.18, -0.22, -0.24, -0.21, -0.24, -0.16, -0.29, -0.18, -0.25]]


        self.delta = [[1.0, 0.6, 0.9, 0.8, 0.8, 1.0, 0.6, 0.6, 0.6, 1.0, 0.5, 0.4, 0.9, 0.6, 1.0, 0.6, 0.6, 0.5, 1.0, 0.4, 0.6, 0.8, 0.5, 0.8, 0.5, 0.9, 1.0, 0.5, 0.4, 0.7],
                      [0.6, 1.0, 0.7, 0.6, 0.8, 0.9, 0.9, 0.6, 0.9, 0.5, 0.8, 0.9, 1.0, 0.7, 0.8, 0.8, 0.5, 0.7, 1.0, 0.5, 0.8, 0.7, 0.8, 0.7, 1.0, 0.8, 0.6, 0.5, 0.9, 0.9],
                      [0.9, 0.7, 1.0, 0.8, 0.5, 0.8, 0.5, 0.7, 1.0, 0.7, 0.8, 1.0, 0.4, 0.5, 0.6, 1.0, 0.4, 1.0, 0.9, 1.0, 0.5, 0.7, 0.7, 0.8, 1.0, 1.0, 0.9, 0.5, 0.5, 0.5],
                      [0.8, 0.6, 0.8, 1.0, 0.8, 0.9, 0.8, 0.8, 0.6, 0.7, 0.9, 0.8, 0.6, 0.8, 0.9, 0.9, 0.4, 1.0, 0.8, 0.9, 0.5, 0.7, 0.6, 0.5, 0.9, 0.8, 0.9, 0.9, 0.7, 0.9],
                      [0.8, 0.8, 0.5, 0.8, 1.0, 0.8, 0.6, 0.7, 0.9, 0.6, 0.8, 0.4, 1.0, 0.7, 0.9, 0.8, 0.7, 0.6, 0.5, 0.6, 0.8, 0.6, 0.6, 0.7, 0.7, 0.9, 0.4, 0.5, 0.9, 0.9],
                      [1.0, 0.9, 0.8, 0.9, 0.8, 1.0, 0.5, 0.5, 0.8, 0.5, 0.9, 0.9, 0.4, 0.7, 0.8, 1.0, 0.9, 0.5, 0.7, 0.7, 0.7, 0.8, 0.8, 0.6, 0.9, 0.8, 0.7, 0.6, 0.9, 0.6],
                      [0.6, 0.9, 0.5, 0.8, 0.6, 0.5, 1.0, 0.7, 0.8, 0.5, 0.9, 0.4, 0.9, 0.7, 0.6, 0.9, 0.8, 0.5, 0.7, 0.6, 0.8, 0.8, 1.0, 0.5, 0.6, 0.7, 0.5, 1.0, 0.9, 0.5],
                      [0.6, 0.6, 0.7, 0.8, 0.7, 0.5, 0.7, 1.0, 0.9, 0.8, 0.9, 0.8, 0.9, 0.4, 0.7, 0.7, 0.7, 0.9, 0.9, 0.5, 0.6, 0.6, 0.5, 0.7, 0.6, 0.7, 1.0, 0.4, 0.4, 0.8],
                      [0.6, 0.9, 1.0, 0.6, 0.9, 0.8, 0.8, 0.9, 1.0, 0.7, 0.9, 0.6, 1.0, 0.6, 1.0, 0.5, 0.7, 0.8, 0.5, 0.8, 0.9, 0.7, 0.9, 0.4, 0.9, 0.5, 1.0, 0.5, 0.7, 0.7],
                      [1.0, 0.5, 0.7, 0.7, 0.6, 0.5, 0.5, 0.8, 0.7, 1.0, 0.9, 0.8, 0.8, 0.7, 0.7, 0.8, 0.8, 0.7, 0.6, 1.0, 0.6, 0.4, 1.0, 0.7, 0.9, 0.5, 0.6, 0.6, 0.7, 0.7],
                      [0.5, 0.8, 0.8, 0.9, 0.8, 0.9, 0.9, 0.9, 0.9, 0.9, 1.0, 0.7, 0.4, 0.7, 0.7, 0.4, 0.9, 0.6, 0.6, 0.8, 0.6, 0.6, 0.4, 0.8, 0.6, 0.9, 1.0, 0.9, 0.7, 1.0],
                      [0.4, 0.9, 1.0, 0.8, 0.4, 0.9, 0.4, 0.8, 0.6, 0.8, 0.7, 1.0, 0.7, 0.6, 0.6, 1.0, 0.9, 0.8, 0.9, 0.8, 0.5, 0.4, 0.8, 0.4, 0.9, 0.9, 0.5, 0.9, 0.6, 0.5],
                      [0.9, 1.0, 0.4, 0.6, 1.0, 0.4, 0.9, 0.9, 1.0, 0.8, 0.4, 0.7, 1.0, 0.9, 0.8, 0.6, 0.9, 0.7, 0.6, 0.6, 0.7, 0.9, 0.8, 0.6, 0.8, 0.7, 0.8, 1.0, 0.5, 0.8],
                      [0.6, 0.7, 0.5, 0.8, 0.7, 0.7, 0.7, 0.4, 0.6, 0.7, 0.7, 0.6, 0.9, 1.0, 0.5, 0.9, 0.5, 0.9, 0.9, 0.9, 0.5, 0.8, 0.5, 0.8, 0.8, 0.4, 0.9, 0.7, 0.9, 0.7],
                      [1.0, 0.8, 0.6, 0.9, 0.9, 0.8, 0.6, 0.7, 1.0, 0.7, 0.7, 0.6, 0.8, 0.5, 1.0, 0.9, 0.5, 0.8, 0.6, 0.8, 0.6, 0.5, 1.0, 0.8, 0.9, 0.6, 1.0, 0.5, 0.5, 0.5],
                      [0.6, 0.8, 1.0, 0.9, 0.8, 1.0, 0.9, 0.7, 0.5, 0.8, 0.4, 1.0, 0.6, 0.9, 0.9, 1.0, 0.7, 0.4, 1.0, 0.9, 0.6, 0.6, 0.4, 0.9, 0.5, 0.5, 0.8, 0.4, 0.4, 0.8],
                      [0.6, 0.5, 0.4, 0.4, 0.7, 0.9, 0.8, 0.7, 0.7, 0.8, 0.9, 0.9, 0.9, 0.5, 0.5, 0.7, 1.0, 0.8, 1.0, 0.5, 0.6, 0.9, 0.7, 0.7, 0.7, 0.5, 0.7, 0.7, 0.9, 0.9],
                      [0.5, 0.7, 1.0, 1.0, 0.6, 0.5, 0.5, 0.9, 0.8, 0.7, 0.6, 0.8, 0.7, 0.9, 0.8, 0.4, 0.8, 1.0, 0.4, 0.9, 0.6, 0.7, 0.8, 0.7, 0.7, 1.0, 0.5, 0.8, 1.0, 0.6],
                      [1.0, 1.0, 0.9, 0.8, 0.5, 0.7, 0.7, 0.9, 0.5, 0.6, 0.6, 0.9, 0.6, 0.9, 0.6, 1.0, 1.0, 0.4, 1.0, 0.5, 0.4, 0.8, 0.9, 0.4, 0.8, 0.7, 0.4, 0.9, 0.9, 0.9],
                      [0.4, 0.5, 1.0, 0.9, 0.6, 0.7, 0.6, 0.5, 0.8, 1.0, 0.8, 0.8, 0.6, 0.9, 0.8, 0.9, 0.5, 0.9, 0.5, 1.0, 0.9, 0.7, 0.7, 0.9, 1.0, 0.6, 0.8, 0.6, 1.0, 0.8],
                      [0.6, 0.8, 0.5, 0.5, 0.8, 0.7, 0.8, 0.6, 0.9, 0.6, 0.6, 0.5, 0.7, 0.5, 0.6, 0.6, 0.6, 0.6, 0.4, 0.9, 1.0, 0.8, 0.8, 0.8, 0.8, 0.4, 0.8, 0.8, 0.5, 0.6],
                      [0.8, 0.7, 0.7, 0.7, 0.6, 0.8, 0.8, 0.6, 0.7, 0.4, 0.6, 0.4, 0.9, 0.8, 0.5, 0.6, 0.9, 0.7, 0.8, 0.7, 0.8, 1.0, 1.0, 0.6, 0.9, 0.5, 0.7, 0.7, 0.7, 0.7],
                      [0.5, 0.8, 0.7, 0.6, 0.6, 0.8, 1.0, 0.5, 0.9, 1.0, 0.4, 0.8, 0.8, 0.5, 1.0, 0.4, 0.7, 0.8, 0.9, 0.7, 0.8, 1.0, 1.0, 1.0, 0.5, 0.4, 0.7, 0.7, 0.4, 0.7],
                      [0.8, 0.7, 0.8, 0.5, 0.7, 0.6, 0.5, 0.7, 0.4, 0.7, 0.8, 0.4, 0.6, 0.8, 0.8, 0.9, 0.7, 0.7, 0.4, 0.9, 0.8, 0.6, 1.0, 1.0, 0.6, 0.9, 0.8, 0.5, 0.8, 0.8],
                      [0.5, 1.0, 1.0, 0.9, 0.7, 0.9, 0.6, 0.6, 0.9, 0.9, 0.6, 0.9, 0.8, 0.8, 0.9, 0.5, 0.7, 0.7, 0.8, 1.0, 0.8, 0.9, 0.5, 0.6, 1.0, 0.9, 0.5, 0.6, 1.0, 0.7],
                      [0.9, 0.8, 1.0, 0.8, 0.9, 0.8, 0.7, 0.7, 0.5, 0.5, 0.9, 0.9, 0.7, 0.4, 0.6, 0.5, 0.5, 1.0, 0.7, 0.6, 0.4, 0.5, 0.4, 0.9, 0.9, 1.0, 0.8, 0.8, 0.9, 0.9],
                      [1.0, 0.6, 0.9, 0.9, 0.4, 0.7, 0.5, 1.0, 1.0, 0.6, 1.0, 0.5, 0.8, 0.9, 1.0, 0.8, 0.7, 0.5, 0.4, 0.8, 0.8, 0.7, 0.7, 0.8, 0.5, 0.8, 1.0, 0.9, 1.0, 0.4],
                      [0.5, 0.5, 0.5, 0.9, 0.5, 0.6, 1.0, 0.4, 0.5, 0.6, 0.9, 0.9, 1.0, 0.7, 0.5, 0.4, 0.7, 0.8, 0.9, 0.6, 0.8, 0.7, 0.7, 0.5, 0.6, 0.8, 0.9, 1.0, 0.5, 0.9],
                      [0.4, 0.9, 0.5, 0.7, 0.9, 0.9, 0.9, 0.4, 0.7, 0.7, 0.7, 0.6, 0.5, 0.9, 0.5, 0.4, 0.9, 1.0, 0.9, 1.0, 0.5, 0.7, 0.4, 0.8, 1.0, 0.9, 1.0, 0.5, 1.0, 1.0],
                      [0.7, 0.9, 0.5, 0.9, 0.9, 0.6, 0.5, 0.8, 0.7, 0.7, 1.0, 0.5, 0.8, 0.7, 0.5, 0.8, 0.9, 0.6, 0.9, 0.8, 0.6, 0.7, 0.7, 0.8, 0.7, 0.9, 0.4, 0.9, 1.0, 1.0]]



    def name(self):
        return "LF15"

if __name__ == "__main__":
    mk01 = LF01()
    print(mk01.theta)
    print(mk01.shape())